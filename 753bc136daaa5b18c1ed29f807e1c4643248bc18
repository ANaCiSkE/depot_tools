{
  "comments": [
    {
      "key": {
        "uuid": "8bde5a47_7073b631",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-09-27T18:26:20Z",
      "side": 1,
      "message": "This seems a little strange, although I guess it is what the current code does; why wouldn\u0027t we expect the formatting to always recurse down into child directories?",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e0ed9ba_d35d8378",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-09-27T19:17:42Z",
      "side": 1,
      "message": "What is did previously, is format all of the changes that appear within the directory of the PRESUBMIT.py. This makes sense until you add a \"inherit-review-settings-ok\" file, in which case the PRESUBMIT.py can now exist in a parent repository.\n\nSo... What we actually want is to format all code within the directory of the PRESUBMIT.py, unless the PRESUBMIT.py is above the root of the repository. In this case, we want to just format the whole repository.\n\nWhat was happening, was that I\u0027d run \"git cl presubmit -u\" in //src/clank, and then the check would run \"git cl format\" within //src.",
      "parentUuid": "8bde5a47_7073b631",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6c0cb1d_60eef4f8",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-09-27T19:54:52Z",
      "side": 1,
      "message": "Right, I understood the prior behavior. However, it seems like this change is combining two different things: look in parent dir for the check, and whether to recurse into subdirs, and it seems like they shouldn\u0027t be coupled implicitly like this; maybe //src/clank should have its own entry in a PRESUBMIT file to indicate that we want to format the whole repo instead?",
      "parentUuid": "3e0ed9ba_d35d8378",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "345c6d97_0d535f96",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-09-27T20:30:14Z",
      "side": 1,
      "message": "I don\u0027t follow...\n* inherit-review-settings-ok is already a thing, I\u0027m not adding it here.\n* Recursing into subdirectories is also already a thing, which I\u0027m not changing.\n* Presubmit checks that use input_api to do their logic (most of them) work fine with inherit-review-settings-ok\n* This check is broken in this context though, because it\u0027s not using input_api, but rather calling out to git.\n\nEven if I added an explicit call to CheckPatchFormatted() from clank\u0027s PRESUBMIT.py, this would still do the wrong thing (modify files in the parent repo) if I add inherit-review-settings-ok.",
      "parentUuid": "d6c0cb1d_60eef4f8",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ce74b25_71c1d1b8",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-09-27T22:54:40Z",
      "side": 1,
      "message": "Oh, I think I was confused. When you say that previously it would format all the code \"within the directory\", you meant, including subdirectories, and so either way it would format the whole subtree, you\u0027re just adjusting where it starts from?",
      "parentUuid": "345c6d97_0d535f96",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6916d237_6e36a0aa",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-09-27T23:52:21Z",
      "side": 1,
      "message": "Correct. In the normal case (where the PRESUBMIT.py lives within the target repo), nothing changes. But in the case where it lives above the target repo, I\u0027m changing it to run inside the target repo (so that when it uses \"git\", git finds the correct files).",
      "parentUuid": "6ce74b25_71c1d1b8",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d549fa32_ec38889a",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-09-27T23:53:25Z",
      "side": 1,
      "message": "Okay, got it. Sorry for the confusion on my part.",
      "parentUuid": "6916d237_6e36a0aa",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d729b8ac_8962a631",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 1101,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2017-09-27T23:53:59Z",
      "side": 1,
      "message": "No worries. It\u0027s a confusing thing.",
      "parentUuid": "d549fa32_ec38889a",
      "revId": "753bc136daaa5b18c1ed29f807e1c4643248bc18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}