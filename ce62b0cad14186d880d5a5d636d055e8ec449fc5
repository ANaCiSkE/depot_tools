{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "157b1863_db43d00f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-05T19:40:09Z",
      "side": 1,
      "message": "merge conflicts solved.",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd2b7b5e_0d9ff506",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 673,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-05T17:01:46Z",
      "side": 1,
      "message": "This will now result in additional git invocation for each submodule, and will slow down gclient sync (used by bots and humans).\n\nI think the old approach could work and keep the performance roughly the same, but could require some interface refactoring to make it work.",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b0b68d_b0ae399b",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 673,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-05T19:40:09Z",
      "side": 1,
      "message": "but aren\u0027t they properly cached? (true: it adds atleast, when cached good, one more call) but you are right,  i\u0027ll be back in a few hours ðŸ˜‚",
      "parentUuid": "bd2b7b5e_0d9ff506",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44a03afa_b2a57384",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 673,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-05T20:04:00Z",
      "side": 1,
      "message": "They are not cached between cli invocations. For `gclient sync`, that will result in 100+ git config calls since git config is called for each submodule, and that can add up to seconds on Windows.\n\nThanks for working on it!",
      "parentUuid": "85b0b68d_b0ae399b",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cafa498_4bf7e4e3",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 684,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2024-09-05T16:44:29Z",
      "side": 1,
      "message": "Trivial nit: Trailing whitespace before `\\n`",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b39a244_e250731f",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 684,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-05T19:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7cafa498_4bf7e4e3",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55a7a918_470cde2e",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 689,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2024-09-05T16:44:29Z",
      "side": 1,
      "message": "Trivial nit: Trailing period",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "979a37ca_ab3120f9",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 689,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-05T19:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55a7a918_470cde2e",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75445eb4_3a638f3f",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 691,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2024-09-05T16:44:29Z",
      "side": 1,
      "message": "I don\u0027t know python. Is there a way to interpret the value \"truthily\", so e.g. \"1\" or \"1000\" or \"true\" will all be true, while \"0\" or \"false\" will not?\n\n(Is there previous precedent for how we handle these sorts of environment variables? Maybe I\u0027m overthinking.)",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a9eb05d_2496fa45",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 691,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-05T19:45:31Z",
      "side": 1,
      "message": "other places use this pattern too:\n```\nsummarize_build \u003d os.environ.get(\"NINJA_SUMMARIZE_BUILD\") \u003d\u003d \"1\"\n```\n\ndon\u0027t think there is a native way. this would work:\n```\ndef is_truthy(value):\n    if isinstance(value, str):\n        return value.lower() not in (\u0027\u0027, \u00270\u0027, \u0027false\u0027, \u0027no\u0027, \u0027off\u0027)\n    return bool(value)\n```\nbut since there are many other places with the `\u003d\u003d \u00271\u0027`  - guess this is something for a follow up",
      "parentUuid": "75445eb4_3a638f3f",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba644529_f91f6864",
        "filename": "gclient_scm.py",
        "patchSetId": 13
      },
      "lineNbr": 691,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2024-09-05T19:51:33Z",
      "side": 1,
      "message": "Yeah if this is how we do it elsewhere let\u0027s just be consistent.",
      "parentUuid": "4a9eb05d_2496fa45",
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e031560_b02887a1",
        "filename": "scm.py",
        "patchSetId": 13
      },
      "lineNbr": 385,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-05T17:01:46Z",
      "side": 1,
      "message": "nit: looks like --list is deprecated, let\u0027s use list instead.",
      "range": {
        "startLine": 385,
        "startChar": 30,
        "endLine": 385,
        "endChar": 36
      },
      "fixSuggestions": [
        {
          "fixId": "069f444e_db280fe2",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "scm.py",
              "range": {
                "startLine": 385,
                "startChar": 0,
                "endLine": 386,
                "endChar": 0
              },
              "replacement": "            cmd \u003d [\u0027config\u0027, \u0027list\u0027, \u0027-z\u0027]\n"
            }
          ]
        }
      ],
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0381921_02cb3fab",
        "filename": "scm.py",
        "patchSetId": 13
      },
      "lineNbr": 385,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-05T19:40:09Z",
      "side": 1,
      "message": "not sure about this, on my local installed git \"config list\" does not work",
      "parentUuid": "6e031560_b02887a1",
      "range": {
        "startLine": 385,
        "startChar": 30,
        "endLine": 385,
        "endChar": 36
      },
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb212a67_aa812a40",
        "filename": "scm.py",
        "patchSetId": 13
      },
      "lineNbr": 385,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2024-09-05T19:51:33Z",
      "side": 1,
      "message": "Seems to work on my git 2.46.0.windows.1.",
      "parentUuid": "b0381921_02cb3fab",
      "range": {
        "startLine": 385,
        "startChar": 30,
        "endLine": 385,
        "endChar": 36
      },
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b445b033_94376489",
        "filename": "scm.py",
        "patchSetId": 13
      },
      "lineNbr": 385,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-05T20:04:00Z",
      "side": 1,
      "message": "Ah, looks like it got added to 2.46.0 (https://git-scm.com/docs/git-config#_deprecated_modes. 2.45.0 doesn\u0027t have it: https://git-scm.com/docs/git-config/2.45.0\n\nLet\u0027s keep --list for now, we can revisit next year.",
      "parentUuid": "fb212a67_aa812a40",
      "range": {
        "startLine": 385,
        "startChar": 30,
        "endLine": 385,
        "endChar": 36
      },
      "revId": "ce62b0cad14186d880d5a5d636d055e8ec449fc5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}