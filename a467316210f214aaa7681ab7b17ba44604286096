{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f53b51fc_7e590dc5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2024-02-07T21:02:41Z",
      "side": 1,
      "message": "The change itself seems technically fine, but the reason for doing this is completely opaque (from inside the code). I also am nervous about the idea that you\u0027re going to try to do some version detection or feature detection with this.\n\nEither here, or in the bug, can you describe how you\u0027ll use this in more detail?\n\nIs there a more straightforward way we could solve the problem, e.g. by adding a version number or something?",
      "revId": "a467316210f214aaa7681ab7b17ba44604286096",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abdb034d_d74256da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-02-07T21:31:09Z",
      "side": 1,
      "message": "+1 - I\u0027m not sure what it solves. \n\nNot sure if is useful, but if we need depot_tools \"version\", there\u0027s utils.depot_tools_version()",
      "parentUuid": "f53b51fc_7e590dc5",
      "revId": "a467316210f214aaa7681ab7b17ba44604286096",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c48f3f5d_5db9a7e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1273334
      },
      "writtenOn": "2024-02-07T21:48:49Z",
      "side": 1,
      "message": "The problem I\u0027m looking to solve is this:\n\nEureka has a Chromium fork. It\u0027s no longer being updated. Up until recently, Eureka was using Chromium\u0027s depot_tools, and its built-in auto update. This is blocking Chromium infra from making changes they want to make because it breaks Eureka. Eureka manifest is now using Eureka\u0027s fork of depot tools (changed today), but it doesn\u0027t fix developer workstations that were previously set up with Chromium depot tools.\n\nI\u0027m planning to create a eureka-only gclient hook that detects when a developer is working on eureka and is in the unfortunate situation of having run Chromium\u0027s up-to-date gclient sync against eureka. This works today, but didn\u0027t work a few days ago. See b/319780376#comment32. In order to make this hook I needed a reliable way to find the gclient that ran the hook.\n\nThat\u0027s what this CL provides.",
      "parentUuid": "abdb034d_d74256da",
      "revId": "a467316210f214aaa7681ab7b17ba44604286096",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "604dfcb3_b0c7a4a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-02-07T22:12:10Z",
      "side": 1,
      "message": "Thanks, b/319780376#comment32 provides good context. I think this actually won\u0027t address the problem. To step back, let\u0027s see what was our state a few days ago:\n\ndepot_tools (in PATH) had only vpython3. vpython was removed\n\nEureka has an old, pinned version of depot_tools. It invokes third_party/depot_tools/download_from_google_storage.py with python3. But, the old version of download_from_google_storage.py invokes `vpyhon` from PATH, instead of using it from the pinned version [0].\n\nSo, if depot_tools in PATH has no vpython, download_from_google_storage will fail.\n\nWhat matters is vpython in PATH. So, even if you detect that gclient was executed using third_party/depot_tools/gclient.py, it won\u0027t matter since it would behave the same as it was executed from PATH from download_from_google_storage.py perspective.\n\nA few solutions:\na) update depot_tools in DEPS so hooks use vpython3\nb) update download_from_google_storage and invoke it with sys.executable (I think we should do this regadlress). Then, somehow cherry-pick that \nc) have a hook that checks if `vpython` exists. If it doesn\u0027t, fail loudly and instructs user how to downgrade depot_tools so the hook works.\n\n[0] https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:download_from_google_storage.py;l\u003d69;drc\u003dedba22d4eb12b5db5bdee7dc921da7857be1b687",
      "parentUuid": "c48f3f5d_5db9a7e7",
      "revId": "a467316210f214aaa7681ab7b17ba44604286096",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "490d8351_63e780e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1273334
      },
      "writtenOn": "2024-02-07T22:18:25Z",
      "side": 1,
      "message": "I think either I failed to express myself, or I misunderstand what you\u0027re saying.\n\nThis CL is just to help me detect if a developer is working on Eureka and using Chromium\u0027s depot_tools rather than working on Eureka and using Eureka\u0027s depot_tools. It\u0027s not attempting to do anything about the vpython issue specifically.\n\nGetting back to your scenario:\n\n\u003e Eureka has an old, pinned version of depot_tools. It invokes third_party/depot_tools/download_from_google_storage.py with python3. But, the old version of download_from_google_storage.py invokes vpyhon from PATH, instead of using it from the pinned version [0].\n\nThis would be an error. Exactly the error I\u0027m trying to detect. Someone has Chromium depot_tools in their PATH and is working on Eureka. That\u0027s bad.",
      "parentUuid": "604dfcb3_b0c7a4a6",
      "revId": "a467316210f214aaa7681ab7b17ba44604286096",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0bb4672_4162956a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-02-07T22:50:03Z",
      "side": 1,
      "message": "Okay, I believe I understand now what your plan is - I din\u0027t realize eureka has it\u0027s own version / fork. I suppose that GCLIENT envvar would be used to poke into depot_tools current state and determine if is eureka\u0027s or chromium\u0027s (e.g. checking git config).\n\nIt still might be good to check PATH (shutil.where(\u0027vpython\u0027) or shutil.where(\u0027gclient\u0027) will work) to see if user has the correct version, instead of relying GSUTIL envvar.\n\nFor example, let\u0027s assume a user has chromium\u0027s depot_tools in PATH. If the user invokes eureka_depot_tools/gclient.py sync, your new check might pass. But a hook that calls download_from_google_storage will invoke gsutil.py using vpython from PATH, and that will fail once vpython is gone from depot_tools. Wouldn\u0027t it?\n\nI don\u0027t have strong option tho - so if this works for your case, we can add an inline comment explaining why it\u0027s there.",
      "parentUuid": "490d8351_63e780e0",
      "revId": "a467316210f214aaa7681ab7b17ba44604286096",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f7f00ad_3b47c2b0",
        "filename": "gclient.py",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-02-07T21:31:09Z",
      "side": 1,
      "message": "I\u0027m not sure how env var would be used and what it would solve. Is there a hook that needs to run gclient? Would it make more sense for hook to invoke DEPSed depot_tools gclient?",
      "revId": "a467316210f214aaa7681ab7b17ba44604286096",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}