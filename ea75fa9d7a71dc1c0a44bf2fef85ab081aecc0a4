{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c78b1168_84e2417e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2021-01-21T04:25:21Z",
      "side": 1,
      "message": "Given these options, I\u0027m a bit skeptical many will discover \u0026 use this script... I\u0027m not sure what the utility bar is for this repo though.",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bf6622e_ee36736d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-23T01:48:55Z",
      "side": 1,
      "message": "I think the utility bar is fairly high, so this should go in chromium\\src\\tools",
      "parentUuid": "c78b1168_84e2417e",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a0b24a4_afbe826a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-21T02:23:31Z",
      "side": 1,
      "message": "This is an occasionally-handy tool for identifying why the build is serialized. I kinda wanna have it available all the time, so depot_tools would be nice. But if nobody else is going to use it then it is just clutter.\n\nIt could also go in chromium\\tools\\win, where clutter is less of a concern, and I\u0027m actually leaning towards that. Thoughts?\n\nSimilar calculations go for ninjatracing. I\u0027d like to make it more accessible by copying it to depot_tools or chromium and having a batch file to invoke it. In both cases depot_tools is arguably more logical (nothing Chromium specific) but... clutter.\n",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49cb85bf_49fc9355",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2021-01-21T04:25:21Z",
      "side": 1,
      "message": "I\u0027m a bit wary of the utila",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6ade401_1ad16000",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-23T01:48:55Z",
      "side": 1,
      "message": "Thanks for the feedback. I\u0027m going to use psutil on Linux and wmic on Windows and put this in Chromium tools - lower bar.\n\nThe new CL is in crrev.com/c/2645638 and I\u0027m going to abandon this one.",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "722a21c3_8495869e",
        "filename": "buildstate.py",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2021-01-21T04:25:21Z",
      "side": 1,
      "message": "I think the x-platform way to do this would be to use psutil:\nhttps://pypi.org/project/psutil/#process-management\n\nYou could use vpython to make it available (e.g., like how it is in autoninja before you removed it :P)\n\nhttps://source.chromium.org/chromium/chromium/tools/build/+/master:parent/depot_tools/autoninja.py;drc\u003d20eda953269e14f055afd58be97ad5915c6c33dd;l\u003d14\n\nUp to you if you want to spend the time to rewrite it using this. If not, would be good to at least mention it here in case someone else wants to be able to do this on non-windows at some point.",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 25
      },
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5264a36_0d42209f",
        "filename": "buildstate.py",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-23T01:48:55Z",
      "side": 1,
      "message": "Interesting. I gave it a try and got it working to show all of the children of the Chrome browser process but it misses most children of ninja. I think it\u0027s some weird race condition where the collecting of processes takes a while and during that time the child processes have disappeared and new ones aren\u0027t enumerated. That\u0027s my best theory anyway.\n\nIf I run it with goma disabled (-j 46) then it usually finds nothing. With goma it finds 105-400 processes when there are actually 1,000. wmic seems to find them all (typically 46 processes with -j 46)\n\nI might use psutil on Linux, but definitely not on Windows.",
      "parentUuid": "722a21c3_8495869e",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 25
      },
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d1e6ccb_3f9b5db6",
        "filename": "buildstate.py",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2021-01-21T04:25:21Z",
      "side": 1,
      "message": "nit: CAPTION_OFF",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9475a607_65a25846",
        "filename": "buildstate.py",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-23T01:48:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d1e6ccb_3f9b5db6",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dfbc28d_6742e0ea",
        "filename": "buildstate.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2021-01-21T04:25:21Z",
      "side": 1,
      "message": "nit: python style should be 4 space indent. Does running \"git cl format --python\" work here?",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ee83da5_21ee8587",
        "filename": "buildstate.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-21T05:02:01Z",
      "side": 1,
      "message": "I did not know that! \"git cl format\" (with or without --python) does nothing. I guess I\u0027ve been doing this wrong for a while.",
      "parentUuid": "4dfbc28d_6742e0ea",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1f4486a_09370f40",
        "filename": "buildstate.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1126674
      },
      "writtenOn": "2021-01-21T14:24:52Z",
      "side": 1,
      "message": "Ah, my bad. I looks like depot_tools has a .style.yapf that sets indent to 2.",
      "parentUuid": "4ee83da5_21ee8587",
      "revId": "ea75fa9d7a71dc1c0a44bf2fef85ab081aecc0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}