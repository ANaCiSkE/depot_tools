{
  "comments": [
    {
      "key": {
        "uuid": "1257a4f5_f544c1c8",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1155,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-08-29T20:01:02Z",
      "side": 1,
      "message": "1) I think enforced_os is a list of deps_os values; that\u0027s probably the wrong thing to use here?\n\n2) I\u0027d prefer it we didn\u0027t use \"gclient_\" in the variable names; that feels implied to me.\n\n3) I\u0027d also prefer it if we used the same values we use in GN, so that they are compatible and we don\u0027t have to map things across. The primary implication of this is that we\u0027d use \"linux\" instead of \"unix\", which is a bit weird since we use \"unix\" for deps_os now, but I think it\u0027s the right thing to migrate to.\n\nDo you have any strong leanings on the latter two things?",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87ab2f4a_5474a4d9",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1155,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-08-29T20:02:49Z",
      "side": 1,
      "message": "Also, host_os should be a string, not a list of strings. It doesn\u0027t make sense to have more than one host_os (or host_arch) value at a time.",
      "parentUuid": "1257a4f5_f544c1c8",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43c3878b_084ee97e",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1155,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2017-08-30T00:16:30Z",
      "side": 1,
      "message": "1) It\u0027s a list (tuple), yes. I\u0027ve been thinking what would be best to use, but enforced_os seemed the best one available. Do you have a specific suggestion what to use otherwise? Should we add something new, and if so, how should it interact with enforced_os (if at all)? It\u0027d make sense to add an independent similarly detected value.\n\n2) Fine, although if we emit it this way to GN it may conflict with variables defined on the GN side. Not sure if that\u0027s intended.\n\n3) Is there a list of GN values somewhere? Please note either way something is not going to match something else, so in a way this is an arbitrary tradeoff. I\u0027m fine with you picking one of the options.",
      "parentUuid": "87ab2f4a_5474a4d9",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd71a073_ef91ac8b",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1155,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-08-30T00:37:03Z",
      "side": 1,
      "message": "\"host_os\" (to GN) means \"this is the platform I\u0027m running on\", and so it doesn\u0027t make sense for it to be a list, nor for it to have the values \"android\" or \"ios\" (at least, those platforms aren\u0027t supported as hosts).\n\nI would map sys.platform onto the values that GN uses (see //tools/gn/args.cc:296). That said, I\u0027m not sure that we\u0027ll need to actually propagate host_os/host_cpu on to GN, since GN already has those built in.\n\n`gn help` will give you a list of the built-in variables (https://chromium.googlesource.com/chromium/src/+/master/tools/gn/docs/reference.md#predefined_variables). `gn args //out/Default --list` in a chromium checkout will give you a list of all of the variables defined in the chromium build files.\n\nYup, you\u0027re right that something doesn\u0027t match either way. I\u0027d like to have gclient match GN, and us migrating the existing deps_os stuff.",
      "parentUuid": "43c3878b_084ee97e",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac921fc2_b3a53cc8",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1155,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2017-08-30T00:48:53Z",
      "side": 1,
      "message": "Alright then. Some good points here.\n\nWhat then should we predefine in gclient so that we can replace hooks hackery and hooks_os with conditions? Should this actually be gclient_target_os? If yes, how do you suggest the value to be determined?",
      "parentUuid": "bd71a073_ef91ac8b",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "484e489a_6f3c480c",
        "filename": "tests/gclient_smoketest.py",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-08-29T17:56:29Z",
      "side": 1,
      "message": "Would this (and the ones below) be different if the tests were run on Mac/Win? And if so, is that a concern?",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d940b053_57b3c380",
        "filename": "tests/gclient_smoketest.py",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2017-08-29T18:02:24Z",
      "side": 1,
      "message": "\u003e Would this (and the ones below) be different if the tests were run on Mac/Win?\n\nYes.\n\n\u003e And if so, is that a concern?\n\nTo some degree yes. I can make this unambiguous by making tests pass command-line flags setting this. Didn\u0027t do yet so I can get early feedback on this. Adding the flags is a trivial change if everything else looks good.",
      "parentUuid": "484e489a_6f3c480c",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a059d853_a1a5ef6f",
        "filename": "tests/gclient_smoketest.py",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2017-08-29T18:03:34Z",
      "side": 1,
      "message": "Yeah, the rest looks fine.",
      "parentUuid": "d940b053_57b3c380",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84c975d5_405506f9",
        "filename": "tests/gclient_smoketest.py",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2017-08-30T00:16:30Z",
      "side": 1,
      "message": "\u003e Would this (and the ones below) be different if the tests were run on Mac/Win? And if so, is that a concern?\n\nDirk, I\u0027d be interested in your thoughts on this. If we roll yet another codepath just for this, we may need a yet another command line flag to override it.",
      "parentUuid": "a059d853_a1a5ef6f",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bf90943_423cebde",
        "filename": "tests/gclient_smoketest.py",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2017-08-30T00:37:03Z",
      "side": 1,
      "message": "I wouldn\u0027t actually expect host_os to be added to the flattened output. Does it need to be? \n\nThat said, we\u0027re going to need some sort of --arg name\u003dvalue command line arg regardless so that users can set args in `gclient config` and/or `gclient sync`, so adding one as part of this seems fine. I think it\u0027s also good if you can override the built-in variables via the command line (you can do this with GN as well), so I don\u0027t think you\u0027ll need to special-case that.",
      "parentUuid": "84c975d5_405506f9",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eaed135_74f88a8e",
        "filename": "tests/gclient_smoketest.py",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2017-08-30T00:48:53Z",
      "side": 1,
      "message": "\u003e I wouldn\u0027t actually expect host_os to be added to the flattened output. Does it need to be? \n\nWe emit the variables so that they can be referenced by the flattened DEPS file, and also ChromeOS (see https://chromium-review.googlesource.com/c/chromium/tools/depot_tools/+/561681).\n\nIt may make sense not to emit built-in variables if they match their default value. Would that behavior make sense to you?\n\n\u003e That said, we\u0027re going to need some sort of --arg name\u003dvalue command line arg regardless so that users can set args in `gclient config` and/or `gclient sync`, so adding one as part of this seems fine. I think it\u0027s also good if you can override the built-in variables via the command line (you can do this with GN as well), so I don\u0027t think you\u0027ll need to special-case that.\n\ncustom_vars should already work for this, and for command line yes, I\u0027d probably add --var key value or --custom-var key\u003dvalue. Let me know if you have any strong preferences.",
      "parentUuid": "2bf90943_423cebde",
      "revId": "61a0019ffc817da74c4a6a060ef95555ef16833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}