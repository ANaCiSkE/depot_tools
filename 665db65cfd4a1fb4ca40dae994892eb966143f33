{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bc880cc3_cb08bcf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2024-07-29T17:44:42Z",
      "side": 1,
      "message": "lgtm % Robbie\u0027s comments",
      "revId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a31e6ae_346a3f2c",
        "filename": "git_common.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2024-07-27T00:56:04Z",
      "side": 1,
      "message": "meganit: I usually separate the `from` block from the other imports.",
      "revId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a9bbd57_2f259a76",
        "filename": "git_common.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2024-07-29T21:37:02Z",
      "side": 1,
      "message": "Ack.  hm, I\u0027m pretty sure I saw some files in depot_tools that don\u0027t separate the froms.  The import organization is all over the place in depot_tools.  FWIW PEP8 does not separate the froms.\n\nSince this is a nit, I\u0027ll leave it for now.  If I\u0027m feeling bored, I\u0027ll probably go clean up all of the files here all at once.",
      "parentUuid": "7a31e6ae_346a3f2c",
      "revId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc6f7d12_30177787",
        "filename": "git_common.py",
        "patchSetId": 1
      },
      "lineNbr": 814,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2024-07-27T00:56:04Z",
      "side": 1,
      "message": "I think this is not supported in 3.8?",
      "range": {
        "startLine": 814,
        "startChar": 28,
        "endLine": 814,
        "endChar": 37
      },
      "revId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4554a0c9_44ed0672",
        "filename": "git_common.py",
        "patchSetId": 1
      },
      "lineNbr": 814,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2024-07-29T17:44:42Z",
      "side": 1,
      "message": "I assume `from __future__ import annotations` is to provide forward compatibility?",
      "parentUuid": "dc6f7d12_30177787",
      "range": {
        "startLine": 814,
        "startChar": 28,
        "endLine": 814,
        "endChar": 37
      },
      "revId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f968933_2d5c195e",
        "filename": "git_common.py",
        "patchSetId": 1
      },
      "lineNbr": 814,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2024-07-29T21:37:02Z",
      "side": 1,
      "message": "Yes, it works with the future import (we discussed offline).  (I also have a python uprev later in the stack).",
      "parentUuid": "4554a0c9_44ed0672",
      "range": {
        "startLine": 814,
        "startChar": 28,
        "endLine": 814,
        "endChar": 37
      },
      "revId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "665db65cfd4a1fb4ca40dae994892eb966143f33",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}