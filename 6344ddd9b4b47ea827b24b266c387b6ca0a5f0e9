{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2a54d644_8dd48e75",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-08-11T16:15:12Z",
      "side": 1,
      "message": "We need a man page for git addf.\n\nhttps://chromium.googlesource.com/chromium/tools/depot_tools/+/6344ddd9b4b47ea827b24b266c387b6ca0a5f0e9/man/src/git-freeze.txt\n\nTo generate man and html pages, there is make_docs.sh script in man/src.",
      "revId": "6344ddd9b4b47ea827b24b266c387b6ca0a5f0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14a27649_dce2d462",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1351748
      },
      "writtenOn": "2023-08-11T17:56:11Z",
      "side": 1,
      "message": "Just an interesting observation based on using this command for my daily work. \n\nRight now, it only adds files that are under the current working directory.\n\nMost of the time, I want to add *all* the files that aren\u0027t ignored in the repo. I think this makes sense as a default behavior, but it is different from how `git add .` behaves.",
      "revId": "6344ddd9b4b47ea827b24b266c387b6ca0a5f0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73996396_fa669012",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1103379
      },
      "writtenOn": "2023-08-11T19:38:05Z",
      "side": 1,
      "message": "That\u0027s `git add :/` (aka `git add :(top)`), right? See pathspecs in `git help glossary` for more details.\n\nTo me that suggests a way to make this into a core git feature. Would we want some kind of pathspec magic to exclude submodules? Or a flag you can pass to `git add`?",
      "parentUuid": "14a27649_dce2d462",
      "revId": "6344ddd9b4b47ea827b24b266c387b6ca0a5f0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccaa0783_7f21f6ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-09-08T21:12:16Z",
      "side": 1,
      "message": "mislick.",
      "revId": "6344ddd9b4b47ea827b24b266c387b6ca0a5f0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ec2e1b0_04925962",
        "filename": "git_addf.py",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-08-11T16:15:12Z",
      "side": 1,
      "message": "We should use subcommand.CommandDispatcher\n\nexample: https://chromium.googlesource.com/chromium/tools/depot_tools/+/6344ddd9b4b47ea827b24b266c387b6ca0a5f0e9/git_freezer.py\n\nThat way, we get parsing, and --help",
      "revId": "6344ddd9b4b47ea827b24b266c387b6ca0a5f0e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}