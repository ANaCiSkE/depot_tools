{
  "comments": [
    {
      "key": {
        "uuid": "33f524dd_f7e26419",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1215,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T12:26:58Z",
      "side": 1,
      "message": "Why do this? If the spec is invalid, committing should not happen. I think we should enforce 100% of the time.",
      "range": {
        "startLine": 1215,
        "startChar": 30,
        "endLine": 1215,
        "endChar": 52
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a727bc2_5fca0eb7",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1215,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-10-25T17:10:32Z",
      "side": 1,
      "message": "This is for uploading to Gerrit. It will ask the user if they want to upload anyway. Presubmit before commit will fail as per other branch of this if-statement.",
      "parentUuid": "33f524dd_f7e26419",
      "range": {
        "startLine": 1215,
        "startChar": 30,
        "endLine": 1215,
        "endChar": 52
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d83cfac2_3b691183",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1215,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T19:30:45Z",
      "side": 1,
      "message": "Yeah - I guess what I\u0027m saying is that either *all* pre-upload errors should be optional. If any are severe enough to block upload, this is probably one of them.",
      "parentUuid": "6a727bc2_5fca0eb7",
      "range": {
        "startLine": 1215,
        "startChar": 30,
        "endLine": 1215,
        "endChar": 52
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cbf737a_4cc297f3",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1218,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T12:26:58Z",
      "side": 1,
      "message": "nit: can get rid of this lambda",
      "range": {
        "startLine": 1218,
        "startChar": 31,
        "endLine": 1218,
        "endChar": 32
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb03247b_122ab730",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1218,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-10-25T17:10:32Z",
      "side": 1,
      "message": "How?",
      "parentUuid": "6cbf737a_4cc297f3",
      "range": {
        "startLine": 1218,
        "startChar": 31,
        "endLine": 1218,
        "endChar": 32
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "372c4684_13313d90",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1218,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T19:30:45Z",
      "side": 1,
      "message": "I think the parenthesis are unnecessary?\n\nfile_filter \u003d file_filter or lambda f: f.LocalPath().wndswith(\u0027.vpython\u0027)\n\nCould be wrong, though.",
      "parentUuid": "bb03247b_122ab730",
      "range": {
        "startLine": 1218,
        "startChar": 31,
        "endLine": 1218,
        "endChar": 32
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07e24307_11dd0ba8",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1218,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-10-26T14:39:10Z",
      "side": 1,
      "message": "It\u0027s a syntax error without parentheses:\n\n$ python tests/presubmit_unittest.py\nTraceback (most recent call last):\n  File \"tests/presubmit_unittest.py\", line 28, in \u003cmodule\u003e\n    import presubmit_support as presubmit\n  File \"/usr/local/google/home/sergiyb/infra/depot_tools/presubmit_support.py\", line 51, in \u003cmodule\u003e\n    import presubmit_canned_checks\n  File \"/usr/local/google/home/sergiyb/infra/depot_tools/presubmit_canned_checks.py\", line 1218\n    file_filter \u003d file_filter or lambda f: f.LocalPath().endswith(\u0027.vpython\u0027)\n                                      ^\nSyntaxError: invalid syntax",
      "parentUuid": "372c4684_13313d90",
      "range": {
        "startLine": 1218,
        "startChar": 31,
        "endLine": 1218,
        "endChar": 32
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2d141c_3b1ec248",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1218,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-26T14:56:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "07e24307_11dd0ba8",
      "range": {
        "startLine": 1218,
        "startChar": 31,
        "endLine": 1218,
        "endChar": 32
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d220914c_c4630bed",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1220,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T12:26:58Z",
      "side": 1,
      "message": "We should run these checks in parallel.",
      "range": {
        "startLine": 1220,
        "startChar": 2,
        "endLine": 1220,
        "endChar": 25
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a675a08_a6ac3fa2",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1220,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-10-25T17:10:32Z",
      "side": 1,
      "message": "AFAIK, we only have one . vpython file per repository. Also this only affects changed files. Finally, this whole loop runs in parallel to other checks. Unless there is an obvious easy way to do this, I don\u0027t see a point overcomplicating this code.",
      "parentUuid": "d220914c_c4630bed",
      "range": {
        "startLine": 1220,
        "startChar": 2,
        "endLine": 1220,
        "endChar": 25
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd0fc784_62bcc014",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1220,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T19:30:45Z",
      "side": 1,
      "message": "That is not correct. A repository can have as many \".vpython\" files as they want, and they can have as many \"XXX.vpython\" files as they want.",
      "parentUuid": "7a675a08_a6ac3fa2",
      "range": {
        "startLine": 1220,
        "startChar": 2,
        "endLine": 1220,
        "endChar": 25
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d171fd3f_38172480",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1220,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2017-10-25T22:01:00Z",
      "side": 1,
      "message": "How fast does command below runs? If ~0.1s, I agree with sergiyb@ parallel isn\u0027t necessary. If \u003e10s, clearly required.",
      "parentUuid": "bd0fc784_62bcc014",
      "range": {
        "startLine": 1220,
        "startChar": 2,
        "endLine": 1220,
        "endChar": 25
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8901eb88_e6c21dfd",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1220,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-10-26T14:39:10Z",
      "side": 1,
      "message": "Dan: I wasn\u0027t saying that repository can\u0027t have many .vpython files. I was just saying the we currently only have 1. But even without this, this presubmit will ONLY run for changed .vpython files, so it won\u0027t affect anyone who doesn\u0027t make changes to them. I don\u0027t think that changing more than a few files will be all that frequent. Anyway, changed it to be parallel.\n\nAndrii: It takes 2s for V8, 4s for Chromium.",
      "parentUuid": "d171fd3f_38172480",
      "range": {
        "startLine": 1220,
        "startChar": 2,
        "endLine": 1220,
        "endChar": 25
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "044740fd_0f0dc0e8",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1220,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-26T14:56:56Z",
      "side": 1,
      "message": "How long verification takes depends on the number of packages and network latency. I\u0027d expect cases where users update all of their files to roll new versions of packages or add a new dependency universally to be common. TBH these files probably won\u0027t be updated much at all, but when they are, it is entirely likely that they would be updated in batch.\n\nMore importantly, though: is there any reason *not* to take advantage of the fact that PRESUBMIT is designed to run tests in parallel? You return a list instead of an object; it\u0027s not like this would require you to write a lot of code. Return a list, get free parallelism - this doesn\u0027t seem like it should be a contentious issue. Parallel is a better user experience than serial, is more robust to all types of changes, and is trivial to enable. What\u0027s the counter-argument to not use it? Every little bit helps.",
      "parentUuid": "8901eb88_e6c21dfd",
      "range": {
        "startLine": 1220,
        "startChar": 2,
        "endLine": 1220,
        "endChar": 25
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd6dac99_7bdeb9ff",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1220,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-10-27T00:06:15Z",
      "side": 1,
      "message": "The reason is that implementing this requires me learning how PRESUBMITs are to be written, which is also not free.",
      "parentUuid": "044740fd_0f0dc0e8",
      "range": {
        "startLine": 1220,
        "startChar": 2,
        "endLine": 1220,
        "endChar": 25
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3a4ac2e_55163b76",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1228,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T12:26:58Z",
      "side": 1,
      "message": "The output of verification is really useful, since it specifies which entries failed to verify. I think that you should include this in the error message.",
      "range": {
        "startLine": 1228,
        "startChar": 0,
        "endLine": 1228,
        "endChar": 35
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "049a6cdc_288a8307",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1228,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-10-25T17:10:32Z",
      "side": 1,
      "message": "It is logged via str(e) below, which prints stdout and stderr. See tests for an example.",
      "parentUuid": "c3a4ac2e_55163b76",
      "range": {
        "startLine": 1228,
        "startChar": 0,
        "endLine": 1228,
        "endChar": 35
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3ae07d3_e69c66d2",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 4
      },
      "lineNbr": 1228,
      "author": {
        "id": 1109829
      },
      "writtenOn": "2017-10-25T19:30:45Z",
      "side": 1,
      "message": "OK, I didn\u0027t realize that CalledProcessError includes STDOUT.",
      "parentUuid": "049a6cdc_288a8307",
      "range": {
        "startLine": 1228,
        "startChar": 0,
        "endLine": 1228,
        "endChar": 35
      },
      "revId": "2e1aea95b556db96fa90fb14f661a91b75900d56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}