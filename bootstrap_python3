#!/usr/bin/env bash

function bootstrap_python3 {
  base_dir=$(dirname "${BASH_SOURCE[0]}")

  cd "${base_dir}"

  if [ -e ".bleeding_edge" ]; then
    CIPD_MANIFESTS=(bootstrap/manifest_bleeding_edge.txt bootstrap/manifest_3.9.txt)
  else
    CIPD_MANIFESTS=(bootstrap/manifest.txt bootstrap/manifest_3.9.txt)
  fi

  BOOTSTRAP_PATHS=()
  for CIPD_MANIFEST in ${CIPD_MANIFESTS[@]}; do
    while IFS= read -r line; do
      if [[ $line =~ ^[^#].*cpython3/.*version:(.*)$ ]]; then
        PYTHON3_VERSION=${BASH_REMATCH[1]}
        PYTHON3_VERSION=${PYTHON3_VERSION//[[:space:]]/}
      fi
    done < $CIPD_MANIFEST
    if [ "X$PYTHON3_VERSION" == "X" ]; then
      echo Could not extract Python 3 version from manifest.
      return 1
    fi

    BOOTSTRAP_PATH="bootstrap-${PYTHON3_VERSION}_bin"
    BOOTSTRAP_PATHS+=("$BOOTSTRAP_PATH")

    # Install CIPD packages. The CIPD client self-bootstraps.
    "cipd" ensure -log-level warning -ensure-file "${CIPD_MANIFEST}" \
        -root "$BOOTSTRAP_PATH"
  done

  for BOOTSTRAP_PATH in "${BOOTSTRAP_PATHS[@]}"; do
    BOOTSTRAP_PYTHON_BIN="${BOOTSTRAP_PATH}/python3/bin/python3"
    "$BOOTSTRAP_PYTHON_BIN" "bootstrap/bootstrap.py" \
      --bootstrap-name "$BOOTSTRAP_PATH" \
      --skip-dirs "${BOOTSTRAP_PATHS[*]}"
  done

  cd - > /dev/null
}
