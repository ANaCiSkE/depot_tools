{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e442f264_4af5ad77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-09T06:01:52Z",
      "side": 1,
      "message": "also added a test now",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a59722a1_b262a58b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-09T16:47:00Z",
      "side": 1,
      "message": "I manually tested this for newauthstack and it works. Thanks for patching it!\n\nnit: it would have been easier to review this if the first patch set was a pure reland. If it were available, I could\u0027ve done diff PS1..PSN and only look at modified lines.",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c246e9a_78961b09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-09T16:48:06Z",
      "side": 1,
      "message": "sorry :( - tried hitting \"reland\" on gerrit that failed, so i was kind of falling back to manually cherry-picking/reverting it.",
      "parentUuid": "a59722a1_b262a58b",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9761054_fa465901",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-09T16:50:18Z",
      "side": 1,
      "message": "No worries! Do you know what happened with reland button? We should fix that on our end.\nManually cherry-pick/ revert can also work; you just upload that cherry-pick first via git cl upload and then iterate on it.",
      "parentUuid": "3c246e9a_78961b09",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d47d593_4cc9c523",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-09T16:55:48Z",
      "side": 1,
      "message": "didnt keep the original error message, as i was in the \"ohhh i broke it\" panic.\nguess it was not able to create the reland because it was not able to do it without conflicts?\n\ncreated a new branch, and `git revert`  the rev commit.\nbut good point - with two uploads it would have been easier, sometimes the CL/gerrit flow still confuses me as it squashes all commits on upload. (it is good, but unusual; comming from gitlab/github MR/PR\u0027s)\n\ni could redo it once more, if you want? the only changes where scm.py:248 -\u003e default\n\nand the new test (should have added this in the original CL) -\u003e scm_unittest.py:197",
      "parentUuid": "e9761054_fa465901",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98b686ce_1f580766",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-09T16:58:57Z",
      "side": 1,
      "message": "Whoops, I realized I didn\u0027t put +1 - sorry for confusion. I compared diff between the original CL and reland locally so no need to upload again.",
      "parentUuid": "0d47d593_4cc9c523",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ca221a2_34385133",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-09T17:00:06Z",
      "side": 1,
      "message": "awesome! thank you and sorry for breaking it in the first place ðŸ™ˆ",
      "parentUuid": "98b686ce_1f580766",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca3b6818_49a5f41b",
        "filename": "tests/scm_unittest.py",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1606504
      },
      "writtenOn": "2024-09-09T06:02:17Z",
      "side": 1,
      "message": "this is the new test",
      "revId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f587b97e54ae57496e936b29864dd9a78ce4c67d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}