{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e368637e_e9c20b17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-04T15:45:10Z",
      "side": 1,
      "message": "lgtm assuming RefToRemoteRef can\u0027t be utilized.",
      "revId": "8c494a03c9ce9ec6779975bb6b6a5e1d2f3eff70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda7c312_28223070",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 754,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-04T15:45:10Z",
      "side": 1,
      "message": "Have you tried updating RefToRemoteRef [1] so it knows about refs/changes? Based on a quick look, I think it may require additional work since local repos don\u0027t sync all refs/changes (and we certainly don\u0027t want to do that); but would still be worth confirming it doesn\u0027t work easily, and leave a comment somehwere.\n\nAs for using rev_type \u003d \"hash\", it does seem hacky; but if the above thing doesn\u0027t work, I think that\u0027s the best we can do without a significant refactoring. \n\n[1] https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:scm.py;l\u003d839;drc\u003da603aded9a9fa93b67222668549d9bc5069a49e8",
      "revId": "8c494a03c9ce9ec6779975bb6b6a5e1d2f3eff70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84db2d86_13c276ae",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 754,
      "author": {
        "id": 1378662
      },
      "writtenOn": "2024-09-05T07:49:07Z",
      "side": 1,
      "message": "I have checked that though I just realized that we can implement this in a different way: simply let refs/changes/ referencing itself as remote ref. So if it\u0027s not available locally, fetch will get it from remote. Otherwise it is self-referencing so it\u0027s always synced \u0026 has a remote ref \u0026 is a local ref.\n\nThis is still very hacky but whatever... :/\nUpdated CL",
      "parentUuid": "cda7c312_28223070",
      "revId": "8c494a03c9ce9ec6779975bb6b6a5e1d2f3eff70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "819607c7_f37575ce",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 754,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-09-05T15:56:55Z",
      "side": 1,
      "message": "I\u0027m not sure if this will work, I think there\u0027s expectation that there is remote tracking of refs/changes (e.g. refs/remotes/remote-changes/...), which we don\u0027t want to have. Have you tested it? In any case, unit tests need to be fixed.",
      "parentUuid": "84db2d86_13c276ae",
      "revId": "8c494a03c9ce9ec6779975bb6b6a5e1d2f3eff70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe7478ce_8256f4ff",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 754,
      "author": {
        "id": 1378662
      },
      "writtenOn": "2024-09-06T05:30:03Z",
      "side": 1,
      "message": "I tried it locally and it does work ok. But it has some confusing behavior e.g. creating gclient_xx branches for ref/changes because gclient think it\u0027s a branch and current branch !\u003d remote branch.\n\nSo if we restrict the check strictly to `refs/heads/` as the comment suggested (local branch), then we don\u0027t need to do anything special since all other refs should be treated as hash anyway (they are not branch). Maybe this is better than setting type to hash explicitly?\n\nAnyway, really sorry for the flip-flop.",
      "parentUuid": "819607c7_f37575ce",
      "revId": "8c494a03c9ce9ec6779975bb6b6a5e1d2f3eff70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}