{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a66ec24f_7a3066a5",
        "filename": "owners_client.py",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2021-01-21T23:13:14Z",
      "side": 1,
      "message": "Doing more than one iteration is expensive, specially when we start using Gerrit, since each one is a network request.\nWe should try for this to work with random inputs, instead of trying to find a way to try to de-randomize the results returned by ListOwners.",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 110,
        "endChar": 31
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10a9418e_d6158809",
        "filename": "owners_client.py",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2021-01-21T23:13:14Z",
      "side": 1,
      "message": "I was running this locally, and I think average position in all files is probably better than minimum position, i.e. something like:\n\n  for owners in owners_by_path.values():\n    for i, owner in enumerate(owners):\n      positions_by_owner.setdefault(owner, []).append(i)\n\n  score_by_owner \u003d {\n    o: sum(positions_by_owner) / len(positions_by_owner) + random.random()\n  }\n\nBoth are very ad-hoc ways to do it, but average seems to make more sense with the test cases below...\nLet me know if you think of a better way to combine the owners for all files.",
      "range": {
        "startLine": 119,
        "startChar": 10,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb9ce490_40ee069d",
        "filename": "owners_client.py",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2021-01-22T00:21:57Z",
      "side": 1,
      "message": "If this is the result of BatchListOwners:\n\nfoo.txt: [alice, cindy]\nbar.txt: [bob, cindy]\n\nShould cindy be ranked higher as an owner than alice or bob?",
      "parentUuid": "10a9418e_d6158809",
      "range": {
        "startLine": 119,
        "startChar": 10,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc7177ae_09bb7d96",
        "filename": "owners_client.py",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2021-01-22T00:53:36Z",
      "side": 1,
      "message": "Maybe?\n\nThe hard part is that we only get the final order, but we don\u0027t get distance or any indication on how the score is calculated.\ne.g.\n\ncindy might be a better reviewer if the tree looks like\n\n  /a/OWNERS \n    alice\n    cindy\n  /b/OWNERS\n    bob\n    cindy\n\nbut alice, bob might be better if the tree looks like\n\n  /OWNERS\n    cindy\n  /a/OWNERS\n    alice\n  /b/OWNERS\n    bob\n\n[1] https://source.chromium.org/chromium/chromium/tools/depot_tools/+/master:owners.py;l\u003d613?q\u003downers.py",
      "parentUuid": "cb9ce490_40ee069d",
      "range": {
        "startLine": 119,
        "startChar": 10,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5785d5e1_44ba0f85",
        "filename": "owners_client.py",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2021-01-22T01:01:55Z",
      "side": 1,
      "message": "For suggesting owners I had the idea that for the most part, we should only suggest a couple of reviewers.\nOtherwise it might be confusing for reviewers to know when is their turn to review and might expect others to review first, or it might not be clear what parts of the CL they\u0027re being asked to review.\n\nSo we could take a similar approach here:\n- First we suggests reviewers that can approve all files.\n- Then we suggest reviewers that can approve most files, if there\u0027s someone else that can approve the rest.\n- At step k, we suggest reviewers that can approve most files if there\u0027s a set of k reviewers that can approve the rest.",
      "parentUuid": "fc7177ae_09bb7d96",
      "range": {
        "startLine": 119,
        "startChar": 10,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eafd4ce6_70e4fe47",
        "filename": "owners_client.py",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2021-01-22T01:21:35Z",
      "side": 1,
      "message": "I like the approach above, but isn\u0027t it sufficient just to sort owners by number of files owned? Not sure if I understand the step K part or \"approve the rest\" part.",
      "parentUuid": "5785d5e1_44ba0f85",
      "range": {
        "startLine": 119,
        "startChar": 10,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d7acec5_0ff55296",
        "filename": "owners_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2021-01-21T21:45:03Z",
      "side": 1,
      "message": "Related to my reply on the comment on owners_queue, setting iterations \u003d 10 seems too high but is the only way to pass tests as they are formatted now. What\u0027s a better option here?",
      "range": {
        "startLine": 155,
        "startChar": 66,
        "endLine": 155,
        "endChar": 68
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c7fa8bd_a89854f1",
        "filename": "owners_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2021-01-21T23:13:14Z",
      "side": 1,
      "message": "I think the best option is to mock it...\nLet\u0027s also add tests for ScoreOwners.",
      "parentUuid": "1d7acec5_0ff55296",
      "range": {
        "startLine": 155,
        "startChar": 66,
        "endLine": 155,
        "endChar": 68
      },
      "revId": "e9fc02923498ee4afda66599dbf8999314692d5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}