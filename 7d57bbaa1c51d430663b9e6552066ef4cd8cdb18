{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cee276cb_3fe89a2d",
        "filename": "auth.py",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2023-09-01T20:25:32Z",
      "side": 1,
      "message": "i see a lot of quote changes in here.  all i ran was `./yapf -i` on the files.  it didn\u0027t do this for me.  did you run black or something ?",
      "revId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47f81f80_85986246",
        "filename": "auth.py",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2023-09-01T21:25:07Z",
      "side": 1,
      "message": "I used pyink, since that\u0027s what Google internally seems to be migrating towards (since it sounds like yapf is behind on changes for supporting syntax in newer Pythons)",
      "parentUuid": "cee276cb_3fe89a2d",
      "revId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6df869fc_0bf4c677",
        "filename": "auth.py",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2023-09-01T21:26:13Z",
      "side": 1,
      "message": "pyink is basically black.  i don\u0027t think that\u0027ll work as long as presubmit and such are using yapf ?  we\u0027d have to kill off yapf entirely and get people to use black ?",
      "parentUuid": "47f81f80_85986246",
      "revId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8ee0063_a2499d67",
        "filename": "auth.py",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2023-09-01T21:55:26Z",
      "side": 1,
      "message": "Hmm. So I had missed that the presubmit (still) complained due to the various \"line too long\" warnings.\n\nThat is something we\u0027d have to resolve. My assumptions here:\n- we probably don\u0027t want to reformat more often than necessary (it looks like there\u0027s about a -8000/+10800 delta between pyink and yapf)\n- we will probably eventually support newer version of Python which yapf won\u0027t necessarily support\n\nBut while poking at this, I realized there\u0027s actually a third option for the short-term. Originally, I had thought it wasn\u0027t very practical to dynamically configure indents for yapf due to the complexity of searching for the config file. But it turns out we /already/ encapsulate that in git cl format here: https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:git_cl.py;l\u003d665;drc\u003dabf4847b0412cac3617c231af35f998eb9141748\n\nSo we could read the contents of .style.yapf and dynamically set it to 2 space indents if we detect preexisting 2 space indents in a file.",
      "parentUuid": "6df869fc_0bf4c677",
      "revId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7d57bbaa1c51d430663b9e6552066ef4cd8cdb18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}