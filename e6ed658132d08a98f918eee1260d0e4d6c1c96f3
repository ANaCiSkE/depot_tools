{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "37ab62f3_6718f326",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-07-14T06:42:22Z",
      "side": 1,
      "message": "In response to a comment from https://chromium-review.googlesource.com/c/chromium/src/+/4663430, this change prints a warning message if `git cl split` has selected the same reviewer for a lot of CLs.",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01a9ba8a_4cface94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000680
      },
      "writtenOn": "2023-07-25T14:58:59Z",
      "side": 1,
      "message": "Ping on this CL",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04d781e2_341c81cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-07-25T22:52:03Z",
      "side": 1,
      "message": "Thanks for the ping. Sorry, this slipped off my radar. I\u0027ll have a look at this later today.",
      "parentUuid": "01a9ba8a_4cface94",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f4be14e_1d0e538f",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-07-14T06:42:22Z",
      "side": 1,
      "message": "Arbitrarily chosen limit, open to suggestions.",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0a284f4_dadac0ad",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1000680
      },
      "writtenOn": "2023-07-14T14:57:13Z",
      "side": 1,
      "message": "Can this function avoid uploading multiple CLs with the same set of code reviewers (regardless of how many OWNERS files there are)?\n\nThus if there are 3 files which were changed\n- a/f1.cc\n- b/f2.cc\n- c/f3.cc\n\nOWNERS files:\n- a/OWNERS\n  OWNERS: o1, o2\n- b/OWNERS\n  OWNERS: o1, o2\n- c/OWNERS\n  OWNERS: o1\n   \nSplitCl() would upload only 2 CLs\n- CL #1: a/f1.cc a/f2.cc\n- CL #2: c/f3.cc\n\n- I think that the change that I am suggesting would have prevented \"git cl split\" from uploading 150 different CLs for changes to subdirectories of //third_party/android_deps/libs/\n- I think that it is fine if \"git cl split\" select OWNER o1 for both CL#1 and CL#2.",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 290,
        "endChar": 72
      },
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9f76656_86045a3f",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-07-26T00:12:33Z",
      "side": 1,
      "message": "To avoid uploading multiple CLs with the same set of code reviewers, I believe we would need to update `GetFilesSplitByOwners`. The number of CLs is based on the result of `GetFilesSplitByOwners`, and this currently splits by `OWNERS` file, not the set of owners listed in the file.\n\nThis is not my domain here, but one solution would be to modify this method to parse the content of the `OWNERS` file, and split based on unique sets of owners. This will no doubt slow down the splitting process, but I believe this would address the issue. @sokcevic, any thoughts/objections/alternative suggestions to this?",
      "parentUuid": "b0a284f4_dadac0ad",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 290,
        "endChar": 72
      },
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81410d13_a10afbb7",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-07-26T13:30:38Z",
      "side": 1,
      "message": "git-cl-split is community maintained so I\u0027m not sure either. There is a potential problem with overloading individuals. A parameter for fine tuning may be needed. In any case, I think it\u0027s only tangential to this CL and we should discuss this somewhere else.",
      "parentUuid": "e9f76656_86045a3f",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 290,
        "endChar": 72
      },
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "320da703_c3d1453a",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-07-14T09:34:58Z",
      "side": 1,
      "message": "the line below can be reduced to following:\n\n    overselected_reviewers \u003d [(v, k) for k, v in cls_per_reviewer.items() if v \u003e CL_SPLIT_SAME_REVIEWER_LIMIT]\n    if overselected_reviewers:\n      print(\u0027Warning: these users will need to review a lot of CLs as a \u0027\n            \u0027result of this split:\u0027)\n      for (votes, reviewer) in sorted(overselected_reviewers, reverse\u003dTrue):\n        print(f\u0027    {reviewer}: {votes} CLs\u0027)",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85f0ec6e_76d65d5c",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-07-26T00:12:33Z",
      "side": 1,
      "message": "Thanks. I have switched to listing the top reviewers, and use `sorted` on `cls_per_reviewer.items()` to make the reviewer rankings.",
      "parentUuid": "320da703_c3d1453a",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aedcb67_9054cc64",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 299,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-07-14T09:34:58Z",
      "side": 1,
      "message": "nit: what if you print top N reviewers; that way we don\u0027t have an arbitrary number. But up to you.",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80552faa_fa3e75f2",
        "filename": "split_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 299,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-07-26T00:12:33Z",
      "side": 1,
      "message": "Thanks for the suggestion. I like this more, and have updated to do this instead.",
      "parentUuid": "9aedcb67_9054cc64",
      "revId": "e6ed658132d08a98f918eee1260d0e4d6c1c96f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}