{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d19b5f56_0e75d585",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1393469
      },
      "writtenOn": "2021-01-26T17:56:20Z",
      "side": 1,
      "message": "I created a CL on a release-heads branch, executed a tryjob recipe and tested new bot_update with led and found no issues (on no-patch, bot_update used correct branch). So I think that should address Edward\u0027s concern about using HEAD instead of correct branch. \n\nCL: https://crrev.com/c/2648830\noriginal - https://ci.chromium.org/p/chromium-m89/builders/try/linux_chromium_asan_rel_ng/252\nled - https://ci.chromium.org/raw/build/logs.chromium.org/chromium-m89/led/sokcevic_google.com/238acd2320992c4b59dbfbfc493be90544a61a48de728a172d94a57a306a3912/+/annotations?server\u003dchromium-swarm.appspot.com",
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a7a1e26_52fbbc4d",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 243,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2021-01-22T18:17:48Z",
      "side": 1,
      "message": "IIRC, bot_update is called on trybots, and if tests fail, it\u0027s called again with patch\u003dFalse to check if failures are because of existing issues or because of the CL.\nIf we\u0027re trying a patch on branches other than the default (e.g. refs/branch-heads), it might happen that the second time it\u0027s called with patch\u003dFalse it will sync to the wrong ref (the default instead of refs/branch-heads).\nNot sure if this would happen, but would like to make sure.\n\nWhy is this change needed?",
      "range": {
        "startLine": 243,
        "startChar": 43,
        "endLine": 243,
        "endChar": 53
      },
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14f99af4_c3e34790",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 243,
      "author": {
        "id": 1393469
      },
      "writtenOn": "2021-01-22T18:29:19Z",
      "side": 1,
      "message": "That\u0027s a good point. I suppose it wouldn\u0027t be resolved to HEAD in that case, but definitely worth verifying. Do you happen to know an easy way to find such builds or should I make a merge conflict in release-branch in order to test it?\n\nAs for this fix, this is needed because recipe roller calls bot_update for upstream and downstream repo. Branch is always HEAD, and cl is then inspected. However, cl shouldn\u0027t looked if is not triggering repository. I\u0027ll add this to description on next update.\n\nhttps://source.chromium.org/chromium/infra/infra/+/master:recipes/recipes/recipe_roll_tryjob.py;l\u003d191",
      "parentUuid": "6a7a1e26_52fbbc4d",
      "range": {
        "startLine": 243,
        "startChar": 43,
        "endLine": 243,
        "endChar": 53
      },
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa448fb0_29870dd6",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 243,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2021-01-22T18:50:40Z",
      "side": 1,
      "message": "Not a merge conflict, but a patch that applies cleanly but causes tests to fail.\n\nWe shouldn\u0027t be changing the ref if the project associated with the change is different than the project we\u0027re trying to update.\n\nhttps://source.chromium.org/chromium/chromium/tools/depot_tools/+/master:recipes/recipe_modules/bot_update/api.py;l\u003d445\n\nSo I think there\u0027s a bug in the way we\u0027re checking that, or in the way recipe_roller configures gclient.\n\nhttps://source.chromium.org/chromium/infra/infra/+/master:recipes/recipes/recipe_roll_tryjob.py;l\u003d196;bpv\u003d0;bpt\u003d0\n\nAnd I believe patch\u003dis_triggering_repo shouldn\u0027t be necessary...",
      "parentUuid": "14f99af4_c3e34790",
      "range": {
        "startLine": 243,
        "startChar": 43,
        "endLine": 243,
        "endChar": 53
      },
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a25721_5eeb241c",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 243,
      "author": {
        "id": 1393469
      },
      "writtenOn": "2021-01-22T21:43:51Z",
      "side": 1,
      "message": "bot_update requires gclient config to be provided (or set as self.m.gclient.c). After looking more into recipe engine recipe_api [0], I don\u0027t think we should construct one on our own, but we also can\u0027t pass empty, at least not as is.\n\nIn the first link you provided [1], when entering build_limited_scripts_slave repository, patch_path \u003d\u003d path \u003d\u003d \"build_limited_scripts_slave\". We could technically inspect git repo, and compare it with self.m.tryserver.gerrit_change_repo_url [2]\n\n+iannucci who may be able to help us make the right decision.\n\n\n[0] https://source.chromium.org/chromium/infra/infra/+/master:recipes-py/recipe_engine/recipe_api.py\n[1] https://source.chromium.org/chromium/chromium/tools/depot_tools/+/master:recipes/recipe_modules/bot_update/api.py;l\u003d445\n[2]",
      "parentUuid": "fa448fb0_29870dd6",
      "range": {
        "startLine": 243,
        "startChar": 43,
        "endLine": 243,
        "endChar": 53
      },
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09854b58_db6e17bb",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-01-22T22:27:49Z",
      "side": 1,
      "message": "why not just detect here that there\u0027s no associated patch and return HEAD? That\u0027s the documented behavior in the docstring above?",
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e54bbc6_1920f49f",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1393469
      },
      "writtenOn": "2021-01-22T22:43:16Z",
      "side": 1,
      "message": "Perhaps we can do that without using patch. But:\n\nget_gerrit_patch_root (called below) uses gclient cfg.solutions[0].name [0] since get_repo_path returns None. There\u0027s a comment stating that\u0027s wrong, but required due to a lot of recipes making some assumptions. Removing solutions from recipe roll tryjob [2] is not possible (it has to be defined), and its name will always be returned, regardless of its value.\n, regardless how we name it.\nWe could in theory duplicate gclient logic here (to detect if gerrit patch applies here), but that may break some other recipes, per comment in [0].\n\nI don\u0027t have historical context to know what do we expect. Adding nodir@ as he originally wrote that.\n\n[0] https://source.chromium.org/chromium/chromium/tools/depot_tools/+/master:recipes/recipe_modules/gclient/api.py;l\u003d317\n[1] https://source.chromium.org/chromium/infra/infra/+/master:recipes/recipes/recipe_roll_tryjob.py;l\u003d198;bpv\u003d0;bpt\u003d0",
      "parentUuid": "09854b58_db6e17bb",
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7972fa08_ba6230b5",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2021-01-26T01:09:07Z",
      "side": 1,
      "message": "Robbie, isn\u0027t that what the code does? get_gerrit_patch_root docstring says `If there is no patch, returns None`. Then L449-450 in this file check for falsiness and returns HEAD",
      "parentUuid": "8e54bbc6_1920f49f",
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4944d2a_ec4583ed",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 453,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2021-01-22T22:27:49Z",
      "side": 1,
      "message": "this line looks wrong",
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fbcac8b_63316103",
        "filename": "recipes/recipe_modules/bot_update/api.py",
        "patchSetId": 2
      },
      "lineNbr": 453,
      "author": {
        "id": 1393469
      },
      "writtenOn": "2021-01-22T22:43:16Z",
      "side": 1,
      "message": "That has been reverted already (need to rebase to tot).",
      "parentUuid": "a4944d2a_ec4583ed",
      "revId": "ab7b9aa23fef98a3af34d0c511287fd4b90c4239",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}