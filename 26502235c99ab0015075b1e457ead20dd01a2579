{
  "comments": [
    {
      "key": {
        "uuid": "4df0ae03_c65d0843",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2017-10-23T22:11:43Z",
      "side": 1,
      "message": "nit: for dicts and lists, the indentation should be 2 spaces, so please -2 space indent here. thank you",
      "range": {
        "startLine": 89,
        "startChar": 6,
        "endLine": 89,
        "endChar": 8
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73860e50_010ed411",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2017-10-23T22:11:43Z",
      "side": 1,
      "message": "nit: please  move if to the next line",
      "range": {
        "startLine": 90,
        "startChar": 29,
        "endLine": 90,
        "endChar": 30
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2faf962a_9181ef41",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 12
      },
      "lineNbr": 97,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2017-10-23T22:11:43Z",
      "side": 1,
      "message": "luci-config always uses forward slashes\nthis code assumes that _os.altsep\u003d\u003d\u0027/\u0027\n\nI\u0027d rather you do\n\n  file_path \u003d f.LocalPath().replace(_os.sep, \u0027/\u0027)\n\nwhich would also be 1 line vs 3",
      "range": {
        "startLine": 96,
        "startChar": 6,
        "endLine": 97,
        "endChar": 58
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2113c763_d4277832",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 12
      },
      "lineNbr": 101,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2017-10-23T22:11:43Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 101,
        "startChar": 13,
        "endLine": 101,
        "endChar": 15
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b64ecfd2_2d4dbe77",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2017-10-23T23:30:03Z",
      "side": 1,
      "message": "how fast is this call? If it\u0027s like 1s, I don\u0027t mind serial execution. If 10s, then I personally would prefer parallel execution (in this CL, just a #TODO to parallelize later).",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 108,
        "endChar": 65
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a26a5a9_d6fba6c8",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2017-10-23T23:30:03Z",
      "side": 1,
      "message": "try..except should cover as little as possible. I recommend removing giant try..except and instead surrounding just the `res \u003d requst(...)...` lines:\n\ntry:\n  res \u003d request(\n          \u0027validate-config\u0027, body\u003d{\u0027config_set\u0027: cs, \u0027files\u0027: f})\nexcept urllib2.HTTPError as e:\n    return [output_api.PresubmitError(\n        \u0027Request to luci-config failed\u0027, long_text\u003dstr(e))]\n\nand the same above. It\u0027s a bit of copy-pasta, but makes it easier to read and discourages later changes that would add more exception classes to giant except clause.",
      "range": {
        "startLine": 119,
        "startChar": 2,
        "endLine": 121,
        "endChar": 59
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbb8ae47_8e2eed8e",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1114299
      },
      "writtenOn": "2017-10-23T23:34:34Z",
      "side": 1,
      "message": "FWIW myjang@ had individual try..except blocks and I\u0027ve recommended one try..except because luci-config is the only service we talk to and HTTPError from any luci-config methods is treated the same way\n\nbut you and myjang@ are right, better to have smaller try..except blocks",
      "parentUuid": "5a26a5a9_d6fba6c8",
      "range": {
        "startLine": 119,
        "startChar": 2,
        "endLine": 121,
        "endChar": 59
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf274380_b5933de9",
        "filename": "tests/presubmit_unittest.py",
        "patchSetId": 12
      },
      "lineNbr": 1871,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2017-10-23T23:33:34Z",
      "side": 1,
      "message": "please add a test for your new config validation. This test could be a good start to fake local file changes.\nUnfortunately, this tests are still living in ~2009 with Py 2.5 and mox library :(",
      "range": {
        "startLine": 1871,
        "startChar": 6,
        "endLine": 1871,
        "endChar": 36
      },
      "revId": "26502235c99ab0015075b1e457ead20dd01a2579",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}