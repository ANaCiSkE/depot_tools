{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ec9447a_c85dc74a",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-15T21:54:29Z",
      "side": 1,
      "message": "This will be printed *each time* gsutil runs. Are you sure it is a good idea? Perhaps it should be moved to luci_login().\n\nMaybe it is also worth mentioning that this will make gsutil completely ignore default ~/.boto even when it is present. `luci-context context` overrides BOTO_CONFIG env var to point to a file that looks like this:\n\n```\n# Autogenerated by LUCI. Do not edit.\n\n[GSUtil]\nsoftware_update_check_period \u003d 0\nstate_dir \u003d \u003ctmp\u003e/T/luci2059406556/gsutil-luci-auth\n\n[GoogleCompute]\nservice_account \u003d default\n```\n\nThis is needed to make sure gsutil is picking up correct credentials (in particular on bots).\n\nIf callers had some options in their ~/.boto, they will be lost. If that\u0027s an issue, we\u0027ll have to teach `luci-auth context` to use the original ~/.boto as a starting point for creating the generated boto. Another alternative is to avoid `luci-auth context` and figure out how to use \"pluggable credentials\" with gsutil (see the comment I left in the doc).",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2610ef94_49f98126",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2022-12-15T22:07:51Z",
      "side": 1,
      "message": "The `luci_context(cmd)` function is only called when these configs are not set[see line 212].\n\nIf gsutil.py is neither running on a bot nor have .boto config set, I figured it was safe to log what\u0027s happening underneath.",
      "parentUuid": "6ec9447a_c85dc74a",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c489b34b_13b2e088",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-15T22:45:49Z",
      "side": 1,
      "message": "The condition below seems wrong.\n\nOn workstations (if BOTO_CONFIG is unset, which it often is), all gsutil.py calls would be hitting luci_context(...) code path (since this is the only way to make authenticated calls).\n\nluci_context(...) just calls _luci_auth_cmd, which always prints the warning. Thus we\u0027ll always be printing the warning.",
      "parentUuid": "2610ef94_49f98126",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6db47246_4038143c",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2022-12-15T23:49:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c489b34b_13b2e088",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "707398be_af6d7e33",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2023-01-06T01:46:14Z",
      "side": 1,
      "message": "\u003e Another alternative is to avoid luci-auth context and figure out how to use \"pluggable credentials\" with gsutil (see the comment I left in the doc).\n\nWhat\u0027s the advantage of doing this?\n\npluggable credentials expects an executable which gives formatted response for google auth to use[1]. The expected response is different from how luci-auth stores it[2], and hence would require depot_tools in maintaining an additional script which google auth can call.\n\nThis would still require us to redirect `gsutil.py config` calls to `luci-auth login`. For the `luci-auth context` part, we\u0027ll have to pretty much write a script that checks if luci-auth is set, do validations, and pass the credential as a formatted output file to pluggable credential. I see two issues with this:\n1. The script pretty much would do what `luci-auth context` already does.\n2. The script will break if anything within luci-auth changes and hence will need to manually sync.\n\nUnless there is a significant performance advantage for using pluggable credentials over `luci-auth context`, I find this to be more straight-forward and manageable for local development. \n\n\n[1] https://github.com/googleapis/google-auth-library-python/blob/6c1297c4d69ba40a8b9392775c17411253fcd73b/google/auth/pluggable.py#L23\n[2] https://github.com/googleapis/google-auth-library-python/blob/6c1297c4d69ba40a8b9392775c17411253fcd73b/google/auth/pluggable.py#L347-L375",
      "parentUuid": "6db47246_4038143c",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e5389a1_0187a37f",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2023-01-09T21:50:28Z",
      "side": 1,
      "message": "Performance is the primary motivation. If it caches external credentials correctly (but I don\u0027t know if it does), then it will need to call `luci-auth token` once per hour instead of every time gsutil is called. It will also allow to use stock unwrapped (but sufficiently recent) gsutil. One just need to point it to a correct BOTO_CONFIG. This may matter if some version of gsutil is used outside of depot_tools.\n\n\u003e The expected response is different from how luci-auth stores it\n\nThis is relatively trivial to change in luci-auth code. No need for a wrapper script, can just add arguments to `luci-auth token` to indicate it is used as a pluggable credential provider.\n\n\u003e we\u0027ll have to pretty much write a script that checks if luci-auth is set\n\nI think if we choose pluggable credentials route (which is a mechanism supported by gsutil natively) we\u0027ll just document that \"You need to configure gsutil to use luci-auth as a credential provider by running this script\").",
      "parentUuid": "707398be_af6d7e33",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "027754b5_3bae049f",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2023-01-09T22:55:29Z",
      "side": 1,
      "message": "\u003e Performance is the primary motivation. If it caches external credentials correctly (but I don\u0027t know if it does)\n\nAt least from skimming through pluggable credentials implementation, I do not see them caching the credential[1]. I might be wrong though.\n\n[1] https://github.com/googleapis/google-auth-library-python/blob/6c1297c4d69ba40a8b9392775c17411253fcd73b/google/auth/pluggable.py#L214",
      "parentUuid": "1e5389a1_0187a37f",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f2a9465_3b982c27",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-15T22:45:49Z",
      "side": 1,
      "message": "This seems incorrect. Just based on the comment it should be\n\n```\nif (os.getenv(\u0027SWARMING_HEADLESS\u0027) \u003d\u003d 1 or \n    os.getenv(\u0027BOTO_CONFIG\u0027) or \n    os.getenv(\u0027AWS_CREDENTIAL_FILE\u0027)):\n  return _run_subprocess(cmd)\nreturn luci_context(cmd)\n```\n\nAlso, as I mentioned in the doc, better to replace SWARMING_HEADLESS check with a check for `LUCI_CONFIG[\u0027local_auth\u0027]`.",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 217,
        "endChar": 29
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee2ea905_1c438035",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2022-12-15T23:49:04Z",
      "side": 1,
      "message": "I have added this check. I have also kept `os.getenv(\u0027SWARMING_HEADLESS\u0027) \u003d\u003d 1` given I have seen that in some places. Is that redundant?",
      "parentUuid": "4f2a9465_3b982c27",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 217,
        "endChar": 29
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5db2afc4_4ce05b83",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2022-12-20T00:20:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee2ea905_1c438035",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 217,
        "endChar": 29
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}