{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ec9447a_c85dc74a",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-15T21:54:29Z",
      "side": 1,
      "message": "This will be printed *each time* gsutil runs. Are you sure it is a good idea? Perhaps it should be moved to luci_login().\n\nMaybe it is also worth mentioning that this will make gsutil completely ignore default ~/.boto even when it is present. `luci-context context` overrides BOTO_CONFIG env var to point to a file that looks like this:\n\n```\n# Autogenerated by LUCI. Do not edit.\n\n[GSUtil]\nsoftware_update_check_period \u003d 0\nstate_dir \u003d \u003ctmp\u003e/T/luci2059406556/gsutil-luci-auth\n\n[GoogleCompute]\nservice_account \u003d default\n```\n\nThis is needed to make sure gsutil is picking up correct credentials (in particular on bots).\n\nIf callers had some options in their ~/.boto, they will be lost. If that\u0027s an issue, we\u0027ll have to teach `luci-auth context` to use the original ~/.boto as a starting point for creating the generated boto. Another alternative is to avoid `luci-auth context` and figure out how to use \"pluggable credentials\" with gsutil (see the comment I left in the doc).",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2610ef94_49f98126",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2022-12-15T22:07:51Z",
      "side": 1,
      "message": "The `luci_context(cmd)` function is only called when these configs are not set[see line 212].\n\nIf gsutil.py is neither running on a bot nor have .boto config set, I figured it was safe to log what\u0027s happening underneath.",
      "parentUuid": "6ec9447a_c85dc74a",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c489b34b_13b2e088",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-15T22:45:49Z",
      "side": 1,
      "message": "The condition below seems wrong.\n\nOn workstations (if BOTO_CONFIG is unset, which it often is), all gsutil.py calls would be hitting luci_context(...) code path (since this is the only way to make authenticated calls).\n\nluci_context(...) just calls _luci_auth_cmd, which always prints the warning. Thus we\u0027ll always be printing the warning.",
      "parentUuid": "2610ef94_49f98126",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f2a9465_3b982c27",
        "filename": "gsutil.py",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 1002539
      },
      "writtenOn": "2022-12-15T22:45:49Z",
      "side": 1,
      "message": "This seems incorrect. Just based on the comment it should be\n\n```\nif (os.getenv(\u0027SWARMING_HEADLESS\u0027) \u003d\u003d 1 or \n    os.getenv(\u0027BOTO_CONFIG\u0027) or \n    os.getenv(\u0027AWS_CREDENTIAL_FILE\u0027)):\n  return _run_subprocess(cmd)\nreturn luci_context(cmd)\n```\n\nAlso, as I mentioned in the doc, better to replace SWARMING_HEADLESS check with a check for `LUCI_CONFIG[\u0027local_auth\u0027]`.",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 217,
        "endChar": 29
      },
      "revId": "86dfe0529f138f87e785e2ce2700e584273d3f4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}