{
  "comments": [
    {
      "key": {
        "uuid": "be0e8c5d_7a2bd3e2",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 939,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-09-17T16:56:17Z",
      "side": 1,
      "message": "Are these stable, or might a prefix get added/removed?",
      "range": {
        "startLine": 939,
        "startChar": 0,
        "endLine": 939,
        "endChar": 23
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da0062ba_044e7aca",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 939,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-09-17T16:59:24Z",
      "side": 1,
      "message": "this is an implementation detail, thus we shouldn\u0027t rely on them. I wonder if this hack should only be enabled on devs workstations by checking for CHROME_HEADLESS env var (bots have it set).",
      "parentUuid": "be0e8c5d_7a2bd3e2",
      "range": {
        "startLine": 939,
        "startChar": 0,
        "endLine": 939,
        "endChar": 23
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eea8da3a_63ecff36",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 939,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-09-17T17:18:12Z",
      "side": 1,
      "message": "Bots haven\u0027t been affected by this bug?",
      "parentUuid": "da0062ba_044e7aca",
      "range": {
        "startLine": 939,
        "startChar": 0,
        "endLine": 939,
        "endChar": 23
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9e09b6_bbbaa375",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 939,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-09-17T17:53:08Z",
      "side": 1,
      "message": "There are very few bots which upload CLs, even fewer of them upload bug reports :P\nAnd I don\u0027t want to hardcode hacky mirrors in potentially pinned depot_tools. However, most historic re-builds don\u0027t need to upload CLs, so perhaps this is moot point overall.",
      "parentUuid": "eea8da3a_63ecff36",
      "range": {
        "startLine": 939,
        "startChar": 0,
        "endLine": 939,
        "endChar": 23
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bacc4caf_4fbb3011",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 963,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-09-17T16:56:17Z",
      "side": 1,
      "message": "Why?",
      "range": {
        "startLine": 963,
        "startChar": 34,
        "endLine": 963,
        "endChar": 47
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f447f85_a102a625",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 963,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-09-17T16:59:24Z",
      "side": 1,
      "message": "i want to choose a random mirror which hasn\u0027t just been used. Do you have better ideas?",
      "parentUuid": "bacc4caf_4fbb3011",
      "range": {
        "startLine": 963,
        "startChar": 34,
        "endLine": 963,
        "endChar": 47
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf124ee9_6fcab922",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 963,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-09-17T17:18:12Z",
      "side": 1,
      "message": "Why do it randomly, instead of just pop()-ing elements from the list?",
      "parentUuid": "4f447f85_a102a625",
      "range": {
        "startLine": 963,
        "startChar": 34,
        "endLine": 963,
        "endChar": 47
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c5ad30c_b8fb7ec6",
        "filename": "gerrit_util.py",
        "patchSetId": 1
      },
      "lineNbr": 963,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-09-17T17:53:08Z",
      "side": 1,
      "message": "If popping, i need to re-fill the list once it\u0027s empty, meaning extra logic.\nRandom doesn\u0027t have this problem and also doesn\u0027t flood the same mirror in case of an outage.",
      "parentUuid": "cf124ee9_6fcab922",
      "range": {
        "startLine": 963,
        "startChar": 34,
        "endLine": 963,
        "endChar": 47
      },
      "revId": "c570346c45c791443a7f867f575f4bc24557f949",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}