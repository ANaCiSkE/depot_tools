{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "96b4b51f_8cb90065",
        "filename": "bazel.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2023-08-02T01:00:24Z",
      "side": 1,
      "message": "This function is run only when `_find_bazel_cros` cannot find the bazel wrapper in chromite. I\u0027m afraid we don\u0027t want to fallback to bazelisk in this case.",
      "revId": "12b5b99ffa1ce57339ee2ccdd77e631aae7b7621",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82b4d117_ee1346ef",
        "filename": "bazel.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2023-08-02T01:05:17Z",
      "side": 1,
      "message": "Why not? For example, if I was operating in the rules_rust repository, and I executed bazel, it should generally prefer executing bazelisk over bazel, because it\u0027s a strict superset.\n\nIt\u0027s a general recommendation to *always* prefer bazelisk over bazel, since the former is hermetic while the latter is not.",
      "parentUuid": "96b4b51f_8cb90065",
      "revId": "12b5b99ffa1ce57339ee2ccdd77e631aae7b7621",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b074479_b910c70b",
        "filename": "bazel.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1118346
      },
      "writtenOn": "2023-08-02T01:41:42Z",
      "side": 1,
      "message": "Please remember that depot_tools is shared among multiple projects, not only ChromeOS. For example, Chrome developers have depot_tools in their $PATH. I guess they don\u0027t use Bazel for Chrome developments, but they may use Bazel to work on other projects on the same machine. If we submit this change, it changes what they actually run by `bazel` if both Bazel and Bazelisk are installed, and may cause build breakages due to version differences.\n\nEven if you believe that Bazelisk is better than bare Bazel, it does not justify breaking workflows of random developers who don\u0027t work on ChromeOS.\n\nIf you prefer always running Bazelisk as `bazel`, you can create a symlink to Bazelisk as `bazel` somewhere in your $PATH. Then this bazel launcher script will transparently fallback to Bazelisk.\n\nIn other words, it is users who decide which to run for `bazel`, Bazel or Bazelisk. It is not us. And the bazel launcher here is designed not to interfere with users\u0027 decision.",
      "parentUuid": "82b4d117_ee1346ef",
      "revId": "12b5b99ffa1ce57339ee2ccdd77e631aae7b7621",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2039d3fc_63ede889",
        "filename": "bazel.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1450817
      },
      "writtenOn": "2023-08-02T01:44:49Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9b074479_b910c70b",
      "revId": "12b5b99ffa1ce57339ee2ccdd77e631aae7b7621",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}