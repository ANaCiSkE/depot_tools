{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cf58c2ff_006d74e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1577257
      },
      "writtenOn": "2024-03-05T23:31:58Z",
      "side": 1,
      "message": "Thank you @khalidpeer@chromium.org for noticing this issue and letting me know about it!",
      "revId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0086e8d4_5a24877f",
        "filename": "reclient_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1545243
      },
      "writtenOn": "2024-03-05T23:35:07Z",
      "side": 1,
      "message": "drive-by comment: Would it make sense to do something like this?\n\n```\noptions \u003d \"-PY\" if platform.release().split(\u0027.\u0027)[0]) \u003e\u003d 23 else \"-P\"\ndf \u003d subprocess.run([\"df\", options, path], ...\n```",
      "revId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "caa2e2c1_7fd8b6dd",
        "filename": "reclient_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1577257
      },
      "writtenOn": "2024-03-06T00:00:13Z",
      "side": 1,
      "message": "Thanks! The problem is that the part that `-Y` adds to the output (the file system type) is the information we\u0027re actually interested in. ðŸ˜Š\n\nIt might be possible to use a different solution that works on older macOS versions, too: `df -P` to get the device in the first column, then parse the output of `mount` to get the file system type, but I think running builds on macOS where the workspace is on a network filesystem is already so unusual, adding that complexity isn\u0027t worth it.",
      "parentUuid": "0086e8d4_5a24877f",
      "revId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30cf734d_405089d1",
        "filename": "reclient_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1545243
      },
      "writtenOn": "2024-03-06T00:09:47Z",
      "side": 1,
      "message": "Got it, that makes sense. Thanks for adding this additional context!",
      "parentUuid": "caa2e2c1_7fd8b6dd",
      "revId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba292f3b_6f706b60",
        "filename": "reclient_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2024-03-06T01:20:08Z",
      "side": 1,
      "message": "\u003e I think running builds on macOS where the workspace is on a network filesystem is already so unusual, adding that complexity isn\u0027t worth it.\n\nnit: I would probably drop the mac part if the use case isn\u0027t clear.",
      "parentUuid": "30cf734d_405089d1",
      "revId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d48ebe5_9d5a3feb",
        "filename": "reclient_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1577257
      },
      "writtenOn": "2024-03-06T15:08:48Z",
      "side": 1,
      "message": "OK, that\u0027s also fine for me. Indeed I\u0027m not aware of any users that would benefit from this at the moment, so it\u0027s maybe a YAGNI. Let me submit this CL just to fix the error message that users currently might see, then I\u0027ll send a follow-up to remove the Mac code path. If we ever need it again, we can then also easily revert it to this good version.",
      "parentUuid": "ba292f3b_6f706b60",
      "revId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "91adb4d2c8f589f2cdbec69e92fb313e11d96318",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}