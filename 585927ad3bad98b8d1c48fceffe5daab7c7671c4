{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "970e58a6_1cbdb5b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2024-08-05T18:00:35Z",
      "side": 1,
      "message": "@dcheng@chromium.org WDYT? Feel free to checkout this CL and test it out yourself, usage is: \"git cl cherry-pick --host chromium-review.googlesource.com --branch refs/branch-heads/1234 rev1 rev2 rev3...\"",
      "revId": "585927ad3bad98b8d1c48fceffe5daab7c7671c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acc7f203_af8e26f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2024-08-05T19:55:09Z",
      "side": 1,
      "message": "@jdonnelly@chromium.org as FYI\n\nI don\u0027t have any CLs in mind at the moment... two things I am curious about though:\n1. How would conflicts in the middle of the chain be handled? Would it allow the creation of a cherry-pick with conflict markers? Would it stop at the first conflict?\n2. Assuming it stops at the first conflict... would you be able to resume building the chain of cherry-picks after fixing the conflict?",
      "parentUuid": "970e58a6_1cbdb5b7",
      "revId": "585927ad3bad98b8d1c48fceffe5daab7c7671c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba18e0ef_db4a0de5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2024-08-05T20:41:12Z",
      "side": 1,
      "message": "It stops at the first conflict and there isn\u0027t a good way to resume afterwards. The command could add a `--parent-change-num` option that sets the parent change for the first cherry-pick CL. So if it runs into a conflict, the tool could print:\n\n```\nFailed to rebase \u003clink-to-change\u003e. Please resolve any merge conflicts.\n\nOnce resolved, you can continue the CL chain with `--parent-change-num`\nand specify which change the chain should start with.\n```",
      "parentUuid": "acc7f203_af8e26f4",
      "revId": "585927ad3bad98b8d1c48fceffe5daab7c7671c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88a326f1_5dbcb64d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001168
      },
      "writtenOn": "2024-08-06T18:17:50Z",
      "side": 1,
      "message": "I think that would be really nice to have.\n\nJust so I understand how this works... is this creating a local commit and a CL on Gerrit simultaneously? Or is it purely operating using the Gerrit REST APIs, and someone fixing the conflict would git cl patch -f the CL in?",
      "parentUuid": "ba18e0ef_db4a0de5",
      "revId": "585927ad3bad98b8d1c48fceffe5daab7c7671c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d533c094_d8d9090d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2024-08-06T18:37:56Z",
      "side": 1,
      "message": "Great, I\u0027ll add it in the next patchset.\n\nThis is based only on the Gerrit API, no local commits are created. The workflow would be to: fix the change (w/ `git cl patch -f` or the gerrit UI, it shouldn\u0027t matter), retry rebasing, and finally continue the chain with `--parent-change-num \u003cnewly-rebased-change\u003e`.",
      "parentUuid": "88a326f1_5dbcb64d",
      "revId": "585927ad3bad98b8d1c48fceffe5daab7c7671c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}