{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "19fbbd71_f6c02fbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2024-06-28T23:21:06Z",
      "side": 1,
      "message": "Very cool refactoring üëç",
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda4b672_465f2d98",
        "filename": "scm.py",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2024-07-15T21:21:22Z",
      "side": 1,
      "message": "Why dataclass?  This is not a dataclass, it has functional methods.",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 52,
        "endChar": 10
      },
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b326486_a982a4aa",
        "filename": "scm.py",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2024-07-16T01:52:22Z",
      "side": 1,
      "message": "It was for root/_config - dropped and changed to __init__ based class instead.",
      "parentUuid": "cda4b672_465f2d98",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 52,
        "endChar": 10
      },
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38833598_afff08ac",
        "filename": "scm.py",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2024-06-28T23:21:06Z",
      "side": 1,
      "message": "pass?",
      "fixSuggestions": [
        {
          "fixId": "42947950_ae165d73",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "scm.py",
              "range": {
                "startLine": 85,
                "startChar": 0,
                "endLine": 85,
                "endChar": 0
              },
              "replacement": "        pass\n"
            }
          ]
        }
      ],
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65b1e497_62302538",
        "filename": "scm.py",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2024-07-16T01:52:22Z",
      "side": 1,
      "message": "this is only required if there are no statements (docstring counts) - but I\u0027ll add it anyhow.",
      "parentUuid": "38833598_afff08ac",
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45d6dbb6_39a14cc5",
        "filename": "scm.py",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2024-07-15T21:25:07Z",
      "side": 1,
      "message": "I feel like the inner ABC should have these methods that need to be implemented by subclasses, and not the other methods like GetConfig, SetConfig.\n\nThe boundary between the inner and outer class is slightly hard to grok, because some of the shared logic is split between the two",
      "range": {
        "startLine": 92,
        "startChar": 9,
        "endLine": 92,
        "endChar": 24
      },
      "fixSuggestions": [
        {
          "fixId": "997fe7d3_3d92c0df",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "scm.py",
              "range": {
                "startLine": 70,
                "startChar": 0,
                "endLine": 78,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "scm.py",
              "range": {
                "startLine": 105,
                "startChar": 0,
                "endLine": 105,
                "endChar": 0
              },
              "replacement": "    def _maybe_load_config(self) -\u003e Dict[str, List[str]]:\n        if self._config is None:\n            self._config \u003d self._load_config()\n        if self._config is None:\n            raise AssertionError(f\u0027{self.__class__.__name__} failed to populate\u0027\n                                 \u0027 GitConfigState._config\u0027)\n        return self._config\n\n"
            }
          ]
        }
      ],
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e465f55c_ee1bfe28",
        "filename": "scm.py",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2024-07-16T01:52:22Z",
      "side": 1,
      "message": "Factored this out so ABC is standalone at the root of the object tree and the caching implementation builds on top of this, then finally either test/production implement the base functions.\n\nI considered passing",
      "parentUuid": "45d6dbb6_39a14cc5",
      "range": {
        "startLine": 92,
        "startChar": 9,
        "endLine": 92,
        "endChar": 24
      },
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f5ab005_031cbf4d",
        "filename": "scm.py",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2024-06-28T23:21:06Z",
      "side": 1,
      "message": "I don\u0027t understand why the error is swallowed but okay.",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 209,
        "endChar": 21
      },
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f717bc49_65af85e3",
        "filename": "tests/scm_test_helper.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2024-06-28T23:21:06Z",
      "side": 1,
      "message": "2024",
      "range": {
        "startLine": 1,
        "startChar": 16,
        "endLine": 1,
        "endChar": 20
      },
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c05969c_50208973",
        "filename": "tests/scm_test_helper.py",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2024-07-15T21:20:11Z",
      "side": 1,
      "message": "What\u0027s this for?",
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb36e9da_c36215f1",
        "filename": "tests/scm_unittest.py",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2024-07-15T21:44:10Z",
      "side": 1,
      "message": "I\u0027d recommend keeping a method for this.",
      "revId": "334b01ef2f9b7d392f231736b8c0ed1458667968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}