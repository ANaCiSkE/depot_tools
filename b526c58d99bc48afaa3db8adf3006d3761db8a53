{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3b3a9ae8_29a448f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1147264
      },
      "writtenOn": "2023-12-08T19:23:45Z",
      "side": 1,
      "message": "L4003 and L4004 in git_cl.py is just an inline-comment. I\u0027m curious how this is informed to the user.",
      "range": {
        "startLine": 10,
        "startChar": 15,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c91d64f_43e748d8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-12-08T21:06:56Z",
      "side": 1,
      "message": "When git cl upload sees divergence, it will exit and ask user to run rebase-update. It\u0027s not ideal, but sufficient per crbug discussion",
      "parentUuid": "3b3a9ae8_29a448f3",
      "range": {
        "startLine": 10,
        "startChar": 15,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e6f633c_5d522244",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1147264
      },
      "writtenOn": "2023-12-08T21:35:17Z",
      "side": 1,
      "message": "üëç",
      "revId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10a122da_4f0f2e07",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 4069,
      "author": {
        "id": 1147264
      },
      "writtenOn": "2023-12-08T19:23:45Z",
      "side": 1,
      "message": "if this is expected to happen in the case the parent branch diverge, could this print a statement to run git `rebase-update`?\n\ne.g.,\n```\nprintf(\"Unexpected exception happened; it\u0027s possible that the parent branch diverged. git gitrebase-update would fix it if so\")\n```",
      "range": {
        "startLine": 4069,
        "startChar": 16,
        "endLine": 4069,
        "endChar": 51
      },
      "revId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2abebbdd_f4504c98",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 4069,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-12-08T21:06:56Z",
      "side": 1,
      "message": "That exception will not happen if the parent diverges since we are exiting early in CMDupload.\n\nThis is an example what user will see (foo -\u003e parent branch which is ahead of bar):\n```\n % git cl upload --dependencies   \nFound change with 3 commits...\nRunning Python 3 presubmit upload checks ...\nPython 3 presubmit checks passed.\n\n\nsaving CL description to /usr/local/google/home/sokcevic/source/depot_tools/.git_cl_description_backup\n\nTitle for patchset [test]: \nEnumerating objects: 7, done.\nCounting objects: 100% (7/7), done.\nDelta compression using up to 72 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (4/4), 446 bytes | 446.00 KiB/s, done.\nTotal 4 (delta 1), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (1/1)\nremote: Waiting for private key checker: 1/2 objects left\nremote: Processing changes: refs: 1, updated: 1, done    \nremote: \nremote: SUCCESS\nremote: \nremote:   https://chromium-review.googlesource.com/c/infra/experimental/+/5097583 CL1\nremote: \nTo https://chromium.googlesource.com/infra/experimental\n * [new reference]   be97862ad35fc779706320a5f7ab3722ef33b763 -\u003e refs/for/refs/heads/main%m\u003dtest\n\nThe dependent local branches of foo are:\n  bar\n  baz\n\n\n--------------------------------------\nRunning \"git cl upload\" from bar:\n\nFound change with 1 commit...\nAt least one branch in the stack has diverged from its upstream branch and does not contain its upstream\u0027s last upload.\nPlease rebase the stack with `git rebase-update` before uploading.\n```",
      "parentUuid": "10a122da_4f0f2e07",
      "range": {
        "startLine": 4069,
        "startChar": 16,
        "endLine": 4069,
        "endChar": 51
      },
      "revId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b526c58d99bc48afaa3db8adf3006d3761db8a53",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}