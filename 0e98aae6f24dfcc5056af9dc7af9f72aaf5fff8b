{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cf6998bb_7cc55f35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2022-02-12T07:16:22Z",
      "side": 1,
      "message": "PTAL",
      "revId": "0e98aae6f24dfcc5056af9dc7af9f72aaf5fff8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "785d8edf_c0a57239",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2022-02-12T21:55:06Z",
      "side": 1,
      "message": "One concern about this change is that it encourages/enables packaging the VS toolchain on a machine that has multiple installs of VS. In an ideal world this wouldn\u0027t matter, but in practice there might be some cross-contamination, or some variation caused by having an ongoing (installed and then upgraded) version. That is, I\u0027ve usually done the install on a clean VM created for this purpose in order to increase the odds of reproducibility.\n\nOn the other hand, being able to test on your workstation is certainly handy, and maybe these cross-contamination fears are unfounded.\n\nAnother way to solve your problem would be to uninstall VS 2019. That\u0027s what I did a few days ago, \u0027cause I\u0027ve fully switched to VS 2022.\n",
      "revId": "0e98aae6f24dfcc5056af9dc7af9f72aaf5fff8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "964e0927_6e152136",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2022-02-14T07:47:23Z",
      "side": 1,
      "message": "I see what you mean about limiting the size of the test matrix. It makes for a very strong case.\n\nI am not opposed to abandoning this change if you prefer that.\n\nMy situation is likely atypical. My intention is to dev on my Linux machine and additionally test on my Windows machine. Originally, I preferred to not buy an additional Windows license for a VM. But I do admit it would make for a cleaner dev situation. I was hoping after I got through setup it wouldn\u0027t be an issue.\n\n(As a side thought, VS 2022 isn\u0027t yet listed as supported. Is there anything in particular we should confirm before we can list support? https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:win_toolchain/package_from_installed.py;l\u003d54;drc\u003d399c5918bf47ff1fe8477f27b57fa0e8c67e438d )",
      "parentUuid": "785d8edf_c0a57239",
      "revId": "0e98aae6f24dfcc5056af9dc7af9f72aaf5fff8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a398749_0394c8e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2022-02-14T23:04:15Z",
      "side": 1,
      "message": "I think somebody would just have to confirm that Chromium builds fine with VS 2022 (with its header files and libraries) and then confirm that add 2022 to the list of supported versions works. I\u0027d be tempted to remove VS 2017 at the same time - I\u0027m not sure if it still works or not.\n\nOne important thing is making sure that VS 2019 is still the default. At some point we\u0027ll change the default to VS 2022, but we probably want to package up a new toolchain at that point.\n\nOne way to make this change more palatable would be to have a warning if multiple versions are detected, or perhaps require an extra switch to be thrown. As in:\n\nprint(\u0027Multiple VS installs detected. It is recommended that packaging be done on a clean VM with just one version installed. To proceed anyway add the --allow_dup_installs flag to this script\u0027)",
      "parentUuid": "964e0927_6e152136",
      "revId": "0e98aae6f24dfcc5056af9dc7af9f72aaf5fff8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33ec63d6_6ccb65fb",
        "filename": "win_toolchain/package_from_installed.py",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2022-02-12T21:55:06Z",
      "side": 1,
      "message": "I\u0027m not sure what this conditional is for, and the variable that it tests doesn\u0027t seem to exist. Just raise if the loop doesn\u0027t return?",
      "revId": "0e98aae6f24dfcc5056af9dc7af9f72aaf5fff8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "601adfb7_20e6501d",
        "filename": "win_toolchain/package_from_installed.py",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1189229
      },
      "writtenOn": "2022-02-14T07:47:23Z",
      "side": 1,
      "message": "I didn\u0027t mean to leave that in. It was part of my debugging / dev. Thank you for catching it.",
      "parentUuid": "33ec63d6_6ccb65fb",
      "revId": "0e98aae6f24dfcc5056af9dc7af9f72aaf5fff8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}