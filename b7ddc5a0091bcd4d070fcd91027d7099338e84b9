{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bc913ebb_9587ee85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2021-01-14T22:50:12Z",
      "side": 1,
      "message": "You may know that we\u0027re planning to replace the goma client (eventually) with something called \"reclient\".\n\nThe current design for reclient requires you to start reclient before the build and stop reclient after the build, and I plan to do that here in autoninja.\n\nSo, we could change this to start/stop goma the same way. I don\u0027t know if there\u0027s any real advantage to doing so, although it would mean the user would never have to remember to call `goma_ctl ensure_start`.",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdaee03f_56ac7a87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1200158
      },
      "writtenOn": "2021-01-14T23:02:45Z",
      "side": 1,
      "message": "Doesn\u0027t goma benefit from running continuously by having context from previous builds? Having autoninja handle running goma_ctl ensure_start seems like a good idea though.",
      "parentUuid": "bc913ebb_9587ee85",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "285e7b4f_3cb4b4f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-14T23:37:00Z",
      "side": 1,
      "message": "I did not know that we were switching to reclient. I hope that the starting/stopping is extremely fast.",
      "parentUuid": "bdaee03f_56ac7a87",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84976ab7_055437f2",
        "filename": "autoninja.bat",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1200158
      },
      "writtenOn": "2021-01-14T23:02:45Z",
      "side": 1,
      "message": "Performance aside, wouldn\u0027t changing from vpython to vpython3 work here?",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d58180e_6db92a3e",
        "filename": "autoninja.bat",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-14T23:37:00Z",
      "side": 1,
      "message": "I did try vpython3 briefly and got a lot of go errors - I think vpython3 doesn\u0027t work yet. Even if it did, moving away from vpython (when possible) is a significant perf gain.",
      "parentUuid": "84976ab7_055437f2",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33d60249_4fe9d006",
        "filename": "autoninja.bat",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1001939
      },
      "writtenOn": "2021-01-15T03:13:11Z",
      "side": 1,
      "message": "cause build error\n\nhttps://ci.chromium.org/ui/p/infra-internal/builders/prod/goma-client-internal-win/1220/overview\nhttps://logs.chromium.org/logs/infra-internal/buildbucket/cr-buildbucket.appspot.com/8858077852309878080/+/u/build/execution_details\nhttps://logs.chromium.org/logs/infra-internal/buildbucket/cr-buildbucket.appspot.com/8858077852309878080/+/u/build/stdout",
      "parentUuid": "5d58180e_6db92a3e",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab8882ac_0fd779c9",
        "filename": "autoninja.py",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1200158
      },
      "writtenOn": "2021-01-14T23:02:45Z",
      "side": 1,
      "message": "Out of curiosity, why change from psutil multiprocessing for core count, which removes one import while adding another?",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb6687b_fec439ce",
        "filename": "autoninja.py",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2021-01-14T23:31:10Z",
      "side": 1,
      "message": "psutil is a non-standard binary library, which hence required vpython. If all you need is the core count, multiprocessing is a better choice.",
      "parentUuid": "ab8882ac_0fd779c9",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da1b18e0_ce902fdd",
        "filename": "autoninja.py",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-14T23:37:00Z",
      "side": 1,
      "message": "Yep. In addition, older versions of psutil won\u0027t return a result greater than 64, which is suboptimal for our 72+ core workstations.",
      "parentUuid": "cfb6687b_fec439ce",
      "revId": "b7ddc5a0091bcd4d070fcd91027d7099338e84b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}