{
  "comments": [
    {
      "key": {
        "uuid": "c3761274_5fe5949d",
        "filename": "cipd_manifest.txt",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-19T18:46:42Z",
      "side": 1,
      "message": "oof, this is tricky. I would definitely sync with ajp@ and dpranke@ about this. Note that for this to be useful you\u0027ll have to add shims like there are for `vpython.bat` and `vpython`.\n\nThis would have the effect of putting python3 on path for all depot_tools users, which might be disruptive. OTOH, it might be a great opportunity to homogenize our windows/linux/mac depot_tools usage.\n\nIf my opinion were the only one that mattered, I would make depot_tools bring it\u0027s own software for all of the software that it depends on (i.e. python and git), for all platforms, and document that if devs wish to override this (at their own peril), they should put depot_tools after other locations on their PATH.",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 9
      },
      "revId": "5dacf4bc0f18940601eb8c114ff76e204b93cd61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "679eb9e1_4d91129a",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 616,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-19T18:46:42Z",
      "side": 1,
      "message": "I\u0027m not a huge fan of this; it means that presubmit is coupled to the scripts that it\u0027s nominally testing. It also means that you won\u0027t be able to update unit tests in finer increments than \"all of the tests in one CL\".\n\nI think it would be better for PRESUBMIT to try to automatically detect the python to run by e.g. scraping the shebang in the file for a python3.",
      "range": {
        "startLine": 616,
        "startChar": 62,
        "endLine": 616,
        "endChar": 69
      },
      "revId": "5dacf4bc0f18940601eb8c114ff76e204b93cd61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13e2f76f_4d892725",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 616,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2019-08-19T20:17:00Z",
      "side": 1,
      "message": "What do you mean that presubmit is coupled to the scripts that it\u0027s nominally testing?\n\nAlso, I don\u0027t see why you can\u0027t add single files at a time.\nIt also allows to run python tests on both python2 and python3, which I think should be possible.",
      "parentUuid": "679eb9e1_4d91129a",
      "range": {
        "startLine": 616,
        "startChar": 62,
        "endLine": 616,
        "endChar": 69
      },
      "revId": "5dacf4bc0f18940601eb8c114ff76e204b93cd61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29a80800_f2fe31bc",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 616,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-19T20:20:17Z",
      "side": 1,
      "message": "\u003e What do you mean that presubmit is coupled to the scripts that it\u0027s nominally testing?\n\nIt means that PRESUBMIT would have to know (in code) about the scripts it\u0027s supposed to run, and their python3 status. That\u0027s not normally how PRESUBMITs are written.\n\n\u003e \n\u003e Also, I don\u0027t see why you can\u0027t add single files at a time.\n\nBecause this function only takes a directory to discover tests in. You wouldn\u0027t be able to use this in python3 mode on a directory until all the tests in that directory were python3. Or you\u0027d have to add lots of blacklisting stuff into PRESUBMIT and have duplicate calls to this function.\n\n\u003e It also allows to run python tests on both python2 and python3, which I think should be possible.\n\nWhat\u0027s the use case for this? Isn\u0027t the goal to get off of python2 entirely next year?",
      "parentUuid": "13e2f76f_4d892725",
      "range": {
        "startLine": 616,
        "startChar": 62,
        "endLine": 616,
        "endChar": 69
      },
      "revId": "5dacf4bc0f18940601eb8c114ff76e204b93cd61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aae70f4c_f8cc4b4d",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 616,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2019-08-19T20:23:37Z",
      "side": 1,
      "message": "Yeah, I was thinking about using blacklist/whitelist.\nAlso, this function doesn\u0027t get a directory, but a list of files. The function above does get a directory, but that\u0027s besides the point.\n\nWe should ensure Python 2 is not broken until we\u0027re ready to deprecate it.",
      "parentUuid": "29a80800_f2fe31bc",
      "range": {
        "startLine": 616,
        "startChar": 62,
        "endLine": 616,
        "endChar": 69
      },
      "revId": "5dacf4bc0f18940601eb8c114ff76e204b93cd61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "635c284a_9c3196b6",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 616,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2019-08-19T20:47:14Z",
      "side": 1,
      "message": "\u003e Yeah, I was thinking about using blacklist/whitelist.\n\u003e Also, this function doesn\u0027t get a directory, but a list of files. The function above does get a directory, but that\u0027s besides the point.\n\nAh, I thought this was all the same function.\n\n\u003e \n\u003e We should ensure Python 2 is not broken until we\u0027re ready to deprecate it.\n\nHow about this: Have a high-level function which:\n\n* scans for all tests\n* if the test has a python3 shebang, schedule a python2 and a python3 version of it.\n* have it take a kwarg `only_python3` which only schedules python3 tests.\n\nThe kwarg will be important to allow teams to migrate their scripts to be python3-only. Otherwise teams will have all of the burden of supporting both interpreters, but none of the benefits, until the slowest team does the work to transition their stuff to python3-only",
      "parentUuid": "aae70f4c_f8cc4b4d",
      "range": {
        "startLine": 616,
        "startChar": 62,
        "endLine": 616,
        "endChar": 69
      },
      "revId": "5dacf4bc0f18940601eb8c114ff76e204b93cd61",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}