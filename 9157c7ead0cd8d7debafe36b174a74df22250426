{
  "comments": [
    {
      "key": {
        "uuid": "fa3a1c09_d5e11e08",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 5176,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2017-02-06T21:05:15Z",
      "side": 1,
      "message": "Robbie would say that depot_tools shouldn\u0027t know about chrome if it can be helped. Is there any way to do this without hardcoding chrome paths here?",
      "revId": "9157c7ead0cd8d7debafe36b174a74df22250426",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "889a9e74_fc25941c",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 5176,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-02-06T22:55:04Z",
      "side": 1,
      "message": "So one option I can think of that won\u0027t be Chromium-specific is to generalize this in some way - i.e. to allow a repository to contain something like a FORMAT.py file at its root (similar to PRESUBMIT.py) - and for this code to delegate the validation to that, if it exists. Then, this logic can exist in that file instead. What do you think? It does add a layer of indirection and hides a bit what\u0027s happening - but does allow projects to define their own validators which is potentially useful to other repositories.\n\nWDYT?\n\n(Other options I rejected is superficially generalizing this - like still looking at the filenames but not their paths - and going up the tree to find a pretty_print.py - which doesn\u0027t really make it less Chromium specific in practice.)",
      "parentUuid": "fa3a1c09_d5e11e08",
      "revId": "9157c7ead0cd8d7debafe36b174a74df22250426",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b14253b8_59b4f1e7",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 5176,
      "author": {
        "id": 1103654
      },
      "writtenOn": "2017-02-06T23:07:39Z",
      "side": 1,
      "message": "iannucci@ - WDYT?",
      "parentUuid": "889a9e74_fc25941c",
      "revId": "9157c7ead0cd8d7debafe36b174a74df22250426",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3922e7ac_b998bf90",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 5176,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-02-15T21:48:24Z",
      "side": 1,
      "message": "Yeah, Nico knows me too well :)\n\nA FORMAT.py would be generally useful; I worry that this (and, well, other chromium-specific customizations in git_cl) make it difficult to extend in a testable way (since the tool is now defined by the @HEAD representation of files in a particular repo, namely chromium/src).\n\nI\u0027ve filed a bug to track this here: crbug.com/692752\n\nAs for this particular CL, I don\u0027t think it would be fair to ask for a FORMAT.py implementation first, considering how much junk has already been admitted to this implementation :(.",
      "parentUuid": "b14253b8_59b4f1e7",
      "revId": "9157c7ead0cd8d7debafe36b174a74df22250426",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}