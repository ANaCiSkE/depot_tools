{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e344c352_e32ab0be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-02-01T20:54:22Z",
      "side": 1,
      "message": "Test package from before this CL has this hash: 30b79411ad\n\u003egclient runhooks \u0026\u0026 ninja -C out\\release base\nWorks.\n\nTest package from patchset 5 from this CL has this hash: 782813b4eb\n\nIt looks like there are still places that explicitly encode \u0027win_sdk\u0027, places that encode the directory depth of the win_sdk\\bin directory (and possibly places that assume no spaces - we\u0027ll see).\n\nI tested with 782813b4eb and it made it a bit further but still failed. The first failure was \"assert len(ucrt_files) \u003e 0\" in _CopyUCRTRuntime. The redist_dir variable at that point is C:\\src\\chromium3\\src\\third_party\\depot_tools\\win_toolchain\\vs_files\\782813b4eb\\win_sdk\\Redist which is clearly wrong - somehow win_sdk is still being used. Perhaps this line in get_toolchain_if_necessary.py: \"win_sdk \u003d os.path.join(abs_toolchain_target_dir, \u0027win_sdk\u0027)\"\n\nI hacked some Python to get further and the .json files seem to be wrong because \"assert _LowercaseDict(json_env) \u003d\u003d _LowercaseDict(cmd_env)\" in _LoadToolchainEnv then fails. I added some instrumentation in order to compare:\n\ncmd_env:\nu\u0027LIB\u0027: u\u0027C:\\\\src\\\\chromium3\\\\src\\\\third_party\\\\depot_tools\\\\win_toolchain\\\\vs_files\\\\782813b4eb\\\\VC\\\\Tools\\\\MSVC\\\\14.28.29333\\\\lib\\\\x64;...\n\njson_env:\n\u0027LIB\u0027: \u0027C:\\\\src\\\\chromium3\\\\src\\\\third_party\\\\depot_tools\\\\win_toolchain\\\\vs_files\\\\782813b4eb\\\\Windows Kits\\\\VC\\\\Tools\\\\MSVC\\\\14.28.29333\\\\lib\\\\x64;...\n\nI\u0027m assuming that the \u0027u\u0027 prefix is harmless, but somehow \"Windows Kits\" is ending up in the path. Probably the \"..\\..\" path-walk code needs to be \"..\\..\\..\" - that may be tricky to do in a forwards/backwards compatible manner.\n",
      "revId": "be9134475b6eaef5138cff75f4d14c6a1e3872f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a03a6c1d_4f665b46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2021-02-01T21:14:58Z",
      "side": 1,
      "message": "Thanks for testing and for building a new package. I\u0027ll look some more.\n\n\u003e Perhaps this line in get_toolchain_if_necessary.py: \"win_sdk \u003d os.path.join(abs_toolchain_target_dir, \u0027win_sdk\u0027)\"\n\nI think this line is being updated in this CL here:\n\nhttps://chromium-review.googlesource.com/c/chromium/tools/depot_tools/+/2655836/6/win_toolchain/get_toolchain_if_necessary.py#550",
      "parentUuid": "e344c352_e32ab0be",
      "revId": "be9134475b6eaef5138cff75f4d14c6a1e3872f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f06c2838_81ccbcd6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-02-01T21:39:41Z",
      "side": 1,
      "message": "Ah.\n\nThe problem is that that script is run from chromium\\src\\third_party\\depot_tools\\win_toolchain\\get_toolchain_if_necessary.py, which means that that fix doesn\u0027t become active until your change has landed and rolled. For now I have simulated that by copying that script.\n\nI\u0027m also realizing that each time I run \"gclient runhooks\" it checks out origin/master in depot_tools, although I don\u0027t think that matters. With all that sorted/hacked (script copied to simulate a depot_tools roll) I did three tests:\n1) With a package created with your change. Pass\n2) With a package created today (short hash, removal of \"..\\..\"). Fail\n3) With the currently active package. Fail\n\nThe problem is that this change only works with a new package, which is asynchronous. I reverted the change on line 550 and then the old ones work, so that line just needs to check for the presence of win_sdk and choose appropriately, I believe.\n\nToolchain changes like this are tricky, and nobody really understands them.",
      "parentUuid": "a03a6c1d_4f665b46",
      "revId": "be9134475b6eaef5138cff75f4d14c6a1e3872f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e32064aa_ae884eb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2021-02-01T21:49:02Z",
      "side": 1,
      "message": "What I think happens:\n\n- When patching in the new toolchain hash, third_party/depot_tools is still old depot_tools (which has the old path.join you linked to)\n\n- build/vs_toolchain in the chrome repo calls get_toolchain_if_necessary --output-json, so that writes the old win_sdk to third_party/depot_tools/win_toolchain/data.json\n\n- and then that data.json file is kind of sticky\n\nSo the two repros have a kind of circular dependency around the name of the win sdk dir. Ideally we can cut that cycle somehow. Just changing it in this cl here doesn\u0027t work. We could have a flag that tells get_toolchain_if_necessary which win sdk dir to use and manually add it when rolling in a new package, but that\u0027s brittle.\n\nMaybe we can edit get_toolchain_if_necessary to check which of win_sdk and \u0027Windows Kits/10\u0027 exists on disk, and use the one that exists, and use that path on that line. Then land that in a prerequisite change, wait until it\u0027s propagated everywhere, and only then land the new package.\n\nIn any case, that line can\u0027t change as part of this cl.",
      "parentUuid": "a03a6c1d_4f665b46",
      "revId": "be9134475b6eaef5138cff75f4d14c6a1e3872f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}