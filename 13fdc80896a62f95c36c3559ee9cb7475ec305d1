{
  "comments": [
    {
      "key": {
        "uuid": "00983e79_45f78744",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-21T17:02:48Z",
      "side": 1,
      "message": "Taken from https://github.com/google/gtest-parallel/blob/master/gtest_parallel.py#L37",
      "range": {
        "startLine": 89,
        "startChar": 6,
        "endLine": 89,
        "endChar": 19
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e93eb1fa_9790d54a",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2018-03-26T22:30:48Z",
      "side": 1,
      "message": "Nice; consider putting this attribution in the block comment above so that others can see it too.",
      "parentUuid": "00983e79_45f78744",
      "range": {
        "startLine": 89,
        "startChar": 6,
        "endLine": 89,
        "endChar": 19
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84f1821a_599134fd",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-28T01:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e93eb1fa_9790d54a",
      "range": {
        "startLine": 89,
        "startChar": 6,
        "endLine": 89,
        "endChar": 19
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a70dbce_346032a6",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2018-03-26T22:30:48Z",
      "side": 1,
      "message": "Even though the code is copy-pasted from elsewhere, format it (e.g. blank lines between methods) to match the code surrounding it here.",
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0de2e47_2c1ac7f6",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-28T01:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a70dbce_346032a6",
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf6cadf5_f9e79f46",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-21T17:02:48Z",
      "side": 1,
      "message": "Thread-based pool, rather than multiprocessing pool.\nSince we\u0027re calling an external command on each thread, we don\u0027t have to care about the PIL, and the performance is the same (on depot_tools\u0027 presubmit)",
      "range": {
        "startLine": 131,
        "startChar": 6,
        "endLine": 131,
        "endChar": 15
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3d93cab_c009d7f2",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2018-03-26T22:30:48Z",
      "side": 1,
      "message": "Nice. Test it on src.git\u0027s presubmit with some big change from chromium-review patched in, though, since that has dozens of PRESUBMIT files.",
      "parentUuid": "bf6cadf5_f9e79f46",
      "range": {
        "startLine": 131,
        "startChar": 6,
        "endLine": 131,
        "endChar": 15
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "415a8859_3b0f0218",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2018-03-26T22:30:48Z",
      "side": 1,
      "message": "This is a bit odd, and took me a little while to understand. On the one hand, it\u0027s elegant and I like it: if we\u0027re doing things in parallel, instead of running the tests from this file, just add them to the pool and we\u0027ll run them along with the ones from all the other files later. Great!\n\nBut on the other hand, it\u0027s really awkward here, because it breaks the \"contract\" of RunTests. This method basically says that it will return the messages produced by running the tests. Now, if we\u0027re in parallel mode, this will always return an empty list. This, in turn, results in the awkward construction at line 1512 where results are collected both from ExecPresubmitScript *and* from RunAsync.\n\nTry to find a way to refactor this such that parallel mode is sort of assumed to be the default, and results are only collected from each file immediately if parallel mode is off. I think that will make the control flow make a bit more sense.",
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d462aae3_78961fc5",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-28T01:09:26Z",
      "side": 1,
      "message": "I refactored (and explicit) that no tests will actually be run.\n\nWe will have to get results from both ExecPresubmitScript *and* RunAsync, because PRESUBMIT files have other kinds of checks besides executing tests, and those return the result right away.\n\nI think the best I can do is to not execute any tests at all until we tell the pool to run them, so that the control flow makes more sense.",
      "parentUuid": "415a8859_3b0f0218",
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2806d0da_71aabfcc",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 1624,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2018-03-26T22:30:48Z",
      "side": 1,
      "message": "Since this is no longer as generic, any reason not to move it closer to the thread worker definition?",
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eabd9a95_4b667773",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 1624,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2018-03-26T22:30:48Z",
      "side": 1,
      "message": "nit: presubmit tends to refer to each thing as a \"check\" rather than as a \"test\" (see: presubmit_canned_checks); but that\u0027s super duper nit-picky and you\u0027re welcome to ignore me.",
      "range": {
        "startLine": 1624,
        "startChar": 16,
        "endLine": 1624,
        "endChar": 20
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38a1e21d_5a381565",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 1624,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-28T01:09:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2806d0da_71aabfcc",
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d8e0814_8459d80c",
        "filename": "presubmit_support.py",
        "patchSetId": 1
      },
      "lineNbr": 1624,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-28T01:09:26Z",
      "side": 1,
      "message": "Well, I\u0027d say running all tests is a check, and the function is called Run*Tests* after all :P",
      "parentUuid": "eabd9a95_4b667773",
      "range": {
        "startLine": 1624,
        "startChar": 16,
        "endLine": 1624,
        "endChar": 20
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db980ab0_e6775738",
        "filename": "tests/presubmit_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 2345,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-03-21T17:02:48Z",
      "side": 1,
      "message": "I think most of the work will be dealing with the tests.\nAs they are, they basically repeat the code (by asserting some calls were made in some order).\n\nI\u0027m planning to update them so that they test we end up calling what we care about (RunTests with certain arguments), no matter how did they do it.",
      "range": {
        "startLine": 2345,
        "startChar": 6,
        "endLine": 2345,
        "endChar": 25
      },
      "revId": "13fdc80896a62f95c36c3559ee9cb7475ec305d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}