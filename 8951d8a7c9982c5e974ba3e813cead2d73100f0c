{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "74e44b49_0c04be30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1286337
      },
      "writtenOn": "2024-01-25T16:15:14Z",
      "side": 1,
      "message": "Is there a reason we don\u0027t allow this?",
      "revId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c17f2d79_fa950b19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-01-25T16:33:17Z",
      "side": 1,
      "message": "The problem is using `git add` with ignoreSubmodules \u003d all.\n\nFor example, let\u0027s assume submodules are not synced and the user has ignoreSubmodules\u003dall. The user runs `git status` and only files are shown (due to ignoreSubmodules). When user runs `git add .`, it will stage submodules that are not synced too, which is probably counter intuitive.",
      "revId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51093944_b6a952af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1286337
      },
      "writtenOn": "2024-01-25T16:59:49Z",
      "side": 1,
      "message": "I\u0027m not changing the default. Personally, I don\u0027t ever use `git add --all` so this wouldn\u0027t affect me.\n\nAnd, doesn\u0027t the presubmit warn you anyways? I hit that 2-3 times per day, so if some time I accidentally do a `git add .` I\u0027m still going to be doing what I always do anyways (uncommit+remove submodules+recommit), just way less frequently. This would allow for a much easier world (for those of us who don\u0027t use `git add` and want to opt in to this).",
      "parentUuid": "c17f2d79_fa950b19",
      "revId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e16e38_1a8cbcaf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-01-25T18:05:31Z",
      "side": 1,
      "message": "I get that, I\u0027m just wanted to highlight problems with this setting.  diff.ignoresubmodules\u003dall used to be default (prior to the submodule migration), and I found it to be more challenging to work with that.\n\ne.g. gitlinks not showing up at all in diff, so if you use git add ever, you won\u0027t know submodules have been committed. Sure, presubmit checks will detect, but the whole interaction with git becomes, imo, even more complicated. E.g. you run `git diff` and no gitlinks show up, yet presubmit says there is one. More context in: http://shortn/_F0OKXcdFSU.\n\nWith that, I would be extremely careful with allowing diff.ignoreSubmodule\u003dall. It would be a different story if we can limit this flag only to git status. \n\nhttps://chromium.googlesource.com/chromium/src/+/main/docs/git_submodules.md#submodules-during-git-status_git-commit_and-git-add offers an alternative - setting up an alias to ignore submodules on `git status`. Would this work well for you?",
      "parentUuid": "51093944_b6a952af",
      "revId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ede09e89_674acf0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1286337
      },
      "writtenOn": "2024-01-25T19:23:14Z",
      "side": 1,
      "message": "Setting up aliases to make `git status` `git commit -a` and `git diff` feels unnecessary. gitconfig is made for this purpose - I always, without exception, want `git status`, `git commit -a`, and `git diff` to perform like this hypothetical alias. Why am I not allowed to set the config which enables this myself?",
      "parentUuid": "91e16e38_1a8cbcaf",
      "revId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25241234_7ecd410b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-01-25T23:53:47Z",
      "side": 1,
      "message": "I wrote my reasoning in the comment above. In addition to that, while you are aware of downsides and problems, others may not be. Potential bugs filed will be more complicated to triage and debug. It\u0027s the same reason why we set fetch.recursesubmodules\u003doff, push.recursesubmodules\u003doff, or don\u0027t allow diff.ignoreSubmodules\u003dnone\n\nAnother problem with is that `diff.ignoreSubmodules\u003dall` used to be the default (and was in the repo git config). If someone didn\u0027t run gclient sync in workspace since the submodules were added, and run if after this patch, they will still have `diff.ignoreSubmodules\u003dall` without knowing downsides.\n\nUnless this CL gets more support from the community and leads, I still believe this shouldn\u0027t be submitted.",
      "parentUuid": "ede09e89_674acf0a",
      "revId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8951d8a7c9982c5e974ba3e813cead2d73100f0c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}