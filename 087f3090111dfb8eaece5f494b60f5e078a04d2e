{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f76f5a87_b0a8f4db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1183500
      },
      "writtenOn": "2023-01-17T11:36:04Z",
      "side": 1,
      "message": "I was able to use gclient on FreeBSD using these minor changes since the code is basically portable in the first place, except these artificial limitations :)",
      "revId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e6f303a_44a0604e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-01-17T21:47:05Z",
      "side": 1,
      "message": "The checks are in place as we don\u0027t test nor provide binaries for unsupported systems. So, while `fetch` and `gclient` work when invoking with python installed on the system, it may not work with `vpython3 fetch` (ie not all cipd python wheels may be available for freebsd). I believe the decision to fail fast is made intentionally, but I don\u0027t have historical knowledge.\n\nSince I don\u0027t have FreeBSD, could you check if all unit tests pass under it (using vpython3)? If all is green, we could explicitly allow FreeBSD.",
      "parentUuid": "f76f5a87_b0a8f4db",
      "revId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cb0f0f7_61001918",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1183500
      },
      "writtenOn": "2023-01-18T12:54:25Z",
      "side": 1,
      "message": "The point here is to empower users to port our open source project to platforms we don\u0027t officially support and potentially have them upstream the changes. To do so, they need to check out the source code in the first place using gclient. We cannot provide binaries for all platforms but we can avoid artificial barriers when they provide their own.\n\nThis particular check isn\u0027t to check if the platform is unsupported. This is handled in vpython and cipd. On an unsupported platform such as FreeBSD, a power user can install cipd via the go repository, and then either provide vpython themselves or bypass it and use the system python (after installing the needed packages).\n\nAt this point they\u0027re going to need to run the essentially platform independent gclient. Allowlisting operating systems in the checks here is pointless because they\u0027ve already explicitly entered unsupported territory. I picked FreeBSD as an example, but there\u0027s also OpenBSD, NetBSD, DragonflyBSD, Haiku, Hurd, Solaris, and so on. In general it does not scale to add a new operating system to countless lists of allowlisted operating systems in code that\u0027s basically portable in the first place. It\u0027s better to simply assume the best about an unknown operating system, perhaps emitting a warning, and let the user deal with any unsupported breakage. :)",
      "parentUuid": "4e6f303a_44a0604e",
      "revId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b55fc56c_c5be9391",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-01-18T20:01:42Z",
      "side": 1,
      "message": "I looked into the history when this was introduced, at turns out it was to error out on clang format and gn [0]. Both tools no longer need nor use this check, so I think it\u0027s fine to remove this artificial restriction.\n\nI\u0027ll create a section in README that covers what platforms are supported. \n\n[0] https://codereview.chromium.org/134313007/",
      "revId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ac7784d_3efca1bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1183500
      },
      "writtenOn": "2023-01-19T10:34:26Z",
      "side": 1,
      "message": "Ah that\u0027s really interesting, thanks for digging up the historic context. It\u0027s a fun day when I end up on our good ol\u0027 friend Rietveld haha. \n\nDoes that mean this CL can land then? Or what did you have in mind?",
      "parentUuid": "b55fc56c_c5be9391",
      "revId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94c0c13f_0a933c9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-01-19T17:49:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cb0f0f7_61001918",
      "revId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04839860_a9afbc4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-01-19T17:49:18Z",
      "side": 1,
      "message": "Woops, forgot to give +1.",
      "parentUuid": "2ac7784d_3efca1bb",
      "revId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "087f3090111dfb8eaece5f494b60f5e078a04d2e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}