{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "536b28f2_58fd9354",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2023-05-04T16:49:43Z",
      "side": 1,
      "message": "Interesting... Are you sure that you\u0027re running this in a way where cipd is not using the cached binary?\n\nI thought that constrained language mode forbid things like `[System.IO.File]::*`. When I run the ps1 script locally w/ Constrained Language mode, I see:\n\n```\nLine |\n 177 |      $CipdLockFile \u003d [System.IO.File]::OpenWrite($CipdLockPath)\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n     | Cannot invoke method. Method invocation is supported only on core types in this language mode.\nInvalidOperation: /s/depot_tools/.cipd_impl.ps1:177\n```",
      "revId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f605746a_76e3ca7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2023-05-04T16:50:18Z",
      "side": 1,
      "message": "(running it on macos, but I think the constraints should work the same way?)",
      "parentUuid": "536b28f2_58fd9354",
      "revId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd721789_8be73c7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2023-05-04T16:51:33Z",
      "side": 1,
      "message": "I don\u0027t mind this change though, if it works; I was just testing the .ps1 script from my mac for now, but was going to get a windows cloudtop to be extra sure after I thought the ps1 file was in good shape.",
      "revId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "162153bc_b2e5066f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1524899
      },
      "writtenOn": "2023-05-04T17:28:49Z",
      "side": 1,
      "message": "My powershell knowledge about restricted modes is quite limited, but I just added a log statement after this line (177) and have been running the file directly including the log statement (Retrieved CIPD bootstrap lock...):\n\n```\n$ powershell -NoProfile -ExecutionPolicy RemoteSigned \".cipd_impl.ps1\" -CipdBinary _cipd.exe -BackendURL https://chrom\ne-infra-packages.appspot.com -VersionFile .\\cipd_client_version\nRetrieved CIPD bootstrap lock...\nDownloading CIPD client for windows-amd64 from https://chrome-infra- packages.appspot.com/client?platform\u003dwindows-amd64\u0026version\u003dgit_revision\n:35a6ab920175a20c85c405aa4b0849db18291cf3...\n```\n\nHowever, running `powershell \"[System.IO.File]::OpenWrite(\u0027.cipd_impl.ps1\u0027)\"` directly fails with the same error (maybe because I am in a globally scoped session?).",
      "parentUuid": "f605746a_76e3ca7b",
      "revId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "fb541eddd4423469c90d505381f36b6fdef1fa0b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}