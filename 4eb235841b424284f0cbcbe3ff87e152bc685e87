{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6b900cdc_704c1feb",
        "filename": "tests/utils_test.py",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1577257
      },
      "writtenOn": "2024-06-11T08:16:49Z",
      "side": 1,
      "message": "OK, I looked at this and the test, took a break, looked at it again, and I still don\u0027t really understand what it does. ðŸ˜… Especially the redirecting of three methods to mocks and then the `side_effect` part..\n\nIt\u0027s possible that I\u0027m just not used enough to the mock stuff in Python, so if another reviewer is fine with this, feel free to submit. Or if there\u0027s a simpler way that relies on less mocking, I can review and LGTM, too..",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 35
      },
      "revId": "4eb235841b424284f0cbcbe3ff87e152bc685e87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa506af2_3e69e139",
        "filename": "tests/utils_test.py",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-06-12T01:54:08Z",
      "side": 1,
      "message": "This is mockng too much. Why don\u0027t you let shutil.move and isfile do actual work, and just ensure the file is available in temp_dir post execution? It would be more like a integration test than unit test tho.\n\nAlternative would be to not create temp_dir in the first place, but that will require code refactoring, or even more mocking.\n\nI\u0027m okay work being done in a follow up cl or here.",
      "parentUuid": "6b900cdc_704c1feb",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 35
      },
      "revId": "4eb235841b424284f0cbcbe3ff87e152bc685e87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b0de4c5_c8e7e032",
        "filename": "tests/utils_test.py",
        "patchSetId": 14
      },
      "lineNbr": 91,
      "author": {
        "id": 1429892
      },
      "writtenOn": "2024-06-12T03:54:52Z",
      "side": 1,
      "message": "I tried to avoid actual work happen because I didn\u0027t want DEPOT_TOOLS_ROOT to be mutated, which does result in these non-ideal mocks. I\u0027ll see if there\u0027s a better way to do this in a followup, since this CL is going through too many cross-ocean cycles.",
      "parentUuid": "aa506af2_3e69e139",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 35
      },
      "revId": "4eb235841b424284f0cbcbe3ff87e152bc685e87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "4eb235841b424284f0cbcbe3ff87e152bc685e87",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "4eb235841b424284f0cbcbe3ff87e152bc685e87",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4eb235841b424284f0cbcbe3ff87e152bc685e87",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4eb235841b424284f0cbcbe3ff87e152bc685e87",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}