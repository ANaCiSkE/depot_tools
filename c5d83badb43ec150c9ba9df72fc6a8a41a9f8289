{
  "comments": [
    {
      "key": {
        "uuid": "8e6a631f_e19fbc34",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1002301
      },
      "writtenOn": "2018-08-29T06:47:45Z",
      "side": 1,
      "message": "Remove this comment; we should just settle for one design and implement it. We don\u0027t have to mention other possible designs except at a very high level.\n\nAs for reusing ParseDepsFile, it seems tricky to get this to fit in there given that it\u0027s tied to the a dependency. It\u0027s very few lines of code in this function anyway so I\u0027d just go with what you have.",
      "range": {
        "startLine": 463,
        "startChar": 4,
        "endLine": 464,
        "endChar": 73
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "790ca898_760174f6",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:06:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e6a631f_e19fbc34",
      "range": {
        "startLine": 463,
        "startChar": 4,
        "endLine": 464,
        "endChar": 73
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc75951a_e8cfa1b4",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "I think it might be better to pass the DEPS file path explicitly.",
      "range": {
        "startLine": 466,
        "startChar": 28,
        "endLine": 466,
        "endChar": 44
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "624e5bee_4f59c2ea",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:06:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc75951a_e8cfa1b4",
      "range": {
        "startLine": 466,
        "startChar": 28,
        "endLine": 466,
        "endChar": 44
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc59d073_a9efccf0",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "I think we shouldn\u0027t support them at all, or make sure that whatever vars are present are defined and have the same value in the parent file.",
      "range": {
        "startLine": 495,
        "startChar": 19,
        "endLine": 495,
        "endChar": 23
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85f8c4af_f7d66688",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "Why not error out in imports? We only want to support single-level imports, right?",
      "range": {
        "startLine": 495,
        "startChar": 27,
        "endLine": 495,
        "endChar": 34
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f907d8f_c1df3090",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:06:31Z",
      "side": 1,
      "message": "Not supporting *vars* would actually complicate the code!\nI believe the current solution is the best compromise: vars defined in a sub DEPS can just be used locally:\n  * DEPS are self-contained.\n  * Makes easy to extract from current DEPS while preserving the clean structure (e.g. android_sdk_* variables).",
      "parentUuid": "bc59d073_a9efccf0",
      "range": {
        "startLine": 495,
        "startChar": 19,
        "endLine": 495,
        "endChar": 23
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "429c9e81_100a6473",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:06:31Z",
      "side": 1,
      "message": "Multi-level imports was indeed a \u0027non-goal\u0027, but this feature appeared as a natural byproduct of this recursive approach.\nWhy not keeping it, then? I don\u0027t see it hinder future developments.",
      "parentUuid": "85f8c4af_f7d66688",
      "range": {
        "startLine": 495,
        "startChar": 27,
        "endLine": 495,
        "endChar": 34
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6ae0654_8c51a5d3",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 1002301
      },
      "writtenOn": "2018-08-29T10:34:53Z",
      "side": 1,
      "message": "Perhaps it makes sense to forbid it like Edward says since if a dev uses it, they\u0027re probably on thin ice. We don\u0027t want absurdly deep import hierarchies to form. I don\u0027t feel I understand how that would look, so I\u0027d forbid recursion.",
      "parentUuid": "429c9e81_100a6473",
      "range": {
        "startLine": 495,
        "startChar": 27,
        "endLine": 495,
        "endChar": 34
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50e86288_25313445",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "Maybe it\u0027d be useful to tell which imported file too.",
      "range": {
        "startLine": 500,
        "startChar": 69,
        "endLine": 500,
        "endChar": 73
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca745a21_deeb64ff",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50e86288_25313445",
      "range": {
        "startLine": 500,
        "startChar": 69,
        "endLine": 500,
        "endChar": 73
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1257166c_fb243e15",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 502,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-28T20:31:13Z",
      "side": 1,
      "message": "Maybe we could either check that:\n * key doesn\u0027t already exist\n * existing key maps to the same value (would still allow a scenario where two modules define a common dependency, without any \u0027defer\u0027 mechanism).",
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6c36cd4_e49115b9",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 502,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "Good idea.\nI think gclient setdep should update all occurrences in the parent and all included DEPS files.",
      "parentUuid": "1257166c_fb243e15",
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fd0c563_5d4fa9c6",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 502,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:31:37Z",
      "side": 1,
      "message": "\u003e Good idea.\nhttps://memegen.googleplex.com/template?sort\u003dinfo\u0026template\u003dwhich_one\n\n\u003e gclient setdep should update all occurrences in the parent and all included DEPS files.\nArgl!! We agreed on discarding this. Cf your comment \"I think the explicit one is better.\" :)\n\nContext: https://docs.google.com/document/d/15hVyMgVC38Aqy_ZuyjHaItun24quVLZp5dbLR1ESKrM/edit?ts\u003d5b7bbe36#heading\u003dh.50fwg0serljz\n\nIn my book, this smart \u0027gclient setdep\u0027 should remains tagged YAGNI.\nFor instance: webrtc rolldeps only have to update /DEPS. The sub-deps such as build/DEPS will simply by synced via gclient.",
      "parentUuid": "d6c36cd4_e49115b9",
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48dfc02d_ec107dbc",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "What about duplication of hook steps?",
      "range": {
        "startLine": 503,
        "startChar": 41,
        "endLine": 503,
        "endChar": 49
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b95549f_c6bb22cb",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:31:37Z",
      "side": 1,
      "message": "We could warn about them.\nFiltering duplicates while preserving order is easy enough, but I\u0027m afraid it would be too smart for our own good.",
      "parentUuid": "48dfc02d_ec107dbc",
      "range": {
        "startLine": 503,
        "startChar": 41,
        "endLine": 503,
        "endChar": 49
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "568117e0_440e96e8",
        "filename": "gclient_eval.py",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1002301
      },
      "writtenOn": "2018-08-29T10:34:53Z",
      "side": 1,
      "message": "When would hook steps be duplicated?\n\nIn general, if we\u0027re not really handling duplicated hooks we should throw an error saying not implemented rather than warning. People don\u0027t look at warnings in general.",
      "parentUuid": "8b95549f_c6bb22cb",
      "range": {
        "startLine": 503,
        "startChar": 41,
        "endLine": 503,
        "endChar": 49
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa6da970_03a9e589",
        "filename": "tests/gclient_test.py",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "Could you make a test in gclient_eval_test as well?",
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "533a4ca4_d293ccc0",
        "filename": "tests/gclient_test.py",
        "patchSetId": 1
      },
      "lineNbr": 844,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-29T01:16:49Z",
      "side": 1,
      "message": "Why do we want to support this?",
      "range": {
        "startLine": 844,
        "startChar": 6,
        "endLine": 844,
        "endChar": 25
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d3ad0df_e45a344d",
        "filename": "tests/gclient_test.py",
        "patchSetId": 1
      },
      "lineNbr": 844,
      "author": {
        "id": 1286313
      },
      "writtenOn": "2018-08-29T09:06:31Z",
      "side": 1,
      "message": "Cf comment above.",
      "parentUuid": "533a4ca4_d293ccc0",
      "range": {
        "startLine": 844,
        "startChar": 6,
        "endLine": 844,
        "endChar": 25
      },
      "revId": "c5d83badb43ec150c9ba9df72fc6a8a41a9f8289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}