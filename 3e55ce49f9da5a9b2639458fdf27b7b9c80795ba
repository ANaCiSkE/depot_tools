{
  "comments": [
    {
      "key": {
        "uuid": "816a79fb_ef34fbe7",
        "filename": "git_cl.py",
        "patchSetId": 2
      },
      "lineNbr": 1022,
      "author": {
        "id": 1367760
      },
      "writtenOn": "2019-10-03T21:10:51Z",
      "side": 1,
      "message": "in the old code longs were allowed, worth keeping?",
      "range": {
        "startLine": 1022,
        "startChar": 21,
        "endLine": 1022,
        "endChar": 24
      },
      "revId": "3e55ce49f9da5a9b2639458fdf27b7b9c80795ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f2de7f7_5b014eb1",
        "filename": "git_cl.py",
        "patchSetId": 2
      },
      "lineNbr": 1047,
      "author": {
        "id": 1367760
      },
      "writtenOn": "2019-10-03T21:10:51Z",
      "side": 1,
      "message": "I\u0027ll leave this up to you as an option:\n\nI find depending on the ordering of nested regex groups errorprone and ugly, you can name with most regex libraries\n\nmatch \u003d re.match(r\u0027(/c(/.*/\\+)?)?/(?P\u003cissue\u003e\\d+)(/(?P\u003cpatchset\u003e\\d+)?/?)?$\u0027, part)\n\nand referenced by match.group(\u0027issue\u0027), match.group(\u0027patchset\u0027)",
      "range": {
        "startLine": 1047,
        "startChar": 0,
        "endLine": 1047,
        "endChar": 62
      },
      "revId": "3e55ce49f9da5a9b2639458fdf27b7b9c80795ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}