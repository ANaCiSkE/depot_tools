{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d379f50_6f341e17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2023-08-09T22:31:31Z",
      "side": 1,
      "message": "I missed the case when I switched to `git ls-tree`. Does using `git submodule status` have the same issue? Why not simply switch back to that?",
      "revId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43c98928_b0599cfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2023-08-09T22:33:49Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/chromium/tools/depot_tools/+/4763348\nis this no longer a concern?",
      "parentUuid": "6d379f50_6f341e17",
      "revId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e65e512a_3561025e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1529602
      },
      "writtenOn": "2023-08-09T22:36:20Z",
      "side": 1,
      "message": "Using `git submodule status` wasn\u0027t the issue but how my code assumed it\u0027s output format was. Josip suggested switching to `git ls-tree` to make the fix more simpler and I missed this case. I\u0027m assuming `git submodule status` should take in staged files too, let me confirm this now.",
      "parentUuid": "43c98928_b0599cfc",
      "revId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a14efadc_3e43ba92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2023-08-09T22:37:22Z",
      "side": 1,
      "message": "(`git submodule status` does take in staged files. we confirmed during debugging)",
      "parentUuid": "e65e512a_3561025e",
      "revId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ae52809_486207bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2023-08-09T22:44:09Z",
      "side": 1,
      "message": "Ok idk how many potential `git submodule status` output formats there are, but if it\u0027s possible to predict and parse all of them seems like we could use `git submodule status`.\n\nJosip, any thoughts?",
      "parentUuid": "a14efadc_3e43ba92",
      "revId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5912426d_5494b045",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2023-08-09T22:46:12Z",
      "side": 1,
      "message": "git submodule status is problematic when submodules are initialized. Running git status will tell where submodules are now pointing to (`+{HASH} name)`) and not where they should point. If we rely on that, gclient won\u0027t know how to update dependencies.\n\nI think we\u0027ll need to rely on ls-tree + diff-index to get staged changes. Or we just commit staged changes during bot_update.",
      "parentUuid": "a14efadc_3e43ba92",
      "revId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5003008d_78aeb475",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2023-08-09T23:15:13Z",
      "side": 1,
      "message": "merging to unblock dawn rolls",
      "parentUuid": "5912426d_5494b045",
      "revId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1f574627d92a233d0b14a545c9fa05387909a45b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}