{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e79929b5_f1d75487",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2073,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2023-09-29T04:27:37Z",
      "side": 1,
      "message": "I guess you mean `https://%s` here?",
      "range": {
        "startLine": 2073,
        "startChar": 30,
        "endLine": 2073,
        "endChar": 51
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31981cc5_6989dc8b",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2073,
      "author": {
        "id": 1398165
      },
      "writtenOn": "2023-10-02T19:18:41Z",
      "side": 1,
      "message": "thanks for catching it.",
      "parentUuid": "e79929b5_f1d75487",
      "range": {
        "startLine": 2073,
        "startChar": 30,
        "endLine": 2073,
        "endChar": 51
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21253d52_d97b6de7",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2082,
      "author": {
        "id": 1398165
      },
      "writtenOn": "2023-09-29T00:56:55Z",
      "side": 1,
      "message": "In depot_tools, it\u0027s their practice to make http calls for prpc endpoint[1] directly. I guess the reason is it doesn\u0027t import prpc lib and any pb2_py files\n\n[1]https://screenshot.googleplex.com/3WQMzZKvyp4FU3e",
      "range": {
        "startLine": 2082,
        "startChar": 30,
        "endLine": 2082,
        "endChar": 61
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24eedbfe_8d0e8448",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2082,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2023-09-29T04:27:37Z",
      "side": 1,
      "message": "I just come to realize depot tools also distribute prpc command. Do you think it would be better to invoke `prpc call -use-id-token -audience https://config.luci.app config.luci.app config.service.v2.Configs.ListConfigSets` to get the response back? It should save you all the work to do retry and stripping XSSI protection prefix. Since ListConfigSets is now the only usage, we can just delete the this whole request method.",
      "parentUuid": "21253d52_d97b6de7",
      "range": {
        "startLine": 2082,
        "startChar": 30,
        "endLine": 2082,
        "endChar": 61
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f7c8b64_c64e8cee",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2082,
      "author": {
        "id": 1398165
      },
      "writtenOn": "2023-10-02T19:18:41Z",
      "side": 1,
      "message": "In depot_tools code, they all use http related libs to make prpc calls. I\u0027d like to follow this practice. No code uses `prpc` command. Also there is a chance that `prpc` happens to no in $PATH. I don\u0027t want to be the first one to use it, in case when it rolls into downstreams and find some dependencies missing.",
      "parentUuid": "24eedbfe_8d0e8448",
      "range": {
        "startLine": 2082,
        "startChar": 30,
        "endLine": 2082,
        "endChar": 61
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eff00a15_db3e6d36",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2082,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2023-10-03T18:54:09Z",
      "side": 1,
      "message": "\u003e Also there is a chance that prpc happens to no in $PATH\n\nhmmm.. it\u0027s very unlikely cause otherwise, the subsequent lucifg validate invocation would fail as well since it is distributed the same way. \n\n\u003e  I\u0027d like to follow this practice. No code uses prpc command. I don\u0027t want to be the first one to use it, in case when it rolls into downstreams and find some dependencies missing.\n\nThat\u0027s fair for this launch. And would you open to we change all implementation to use prpc command as part of depot_tools cleanup effort to reduce code redundancy?",
      "parentUuid": "8f7c8b64_c64e8cee",
      "range": {
        "startLine": 2082,
        "startChar": 30,
        "endLine": 2082,
        "endChar": 61
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bdb4c29_60ae680a",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2082,
      "author": {
        "id": 1398165
      },
      "writtenOn": "2023-10-03T22:16:38Z",
      "side": 1,
      "message": "uh, right. Being able to use \u0027lucicfg\u0027 cmd has kind of proved it. \n\nYeah, I\u0027m open to the cleanup for Buildbucket and luci-config related code in future, (except the one in `rdb_wrapper.py` which I\u0027m not familiar with)",
      "parentUuid": "eff00a15_db3e6d36",
      "range": {
        "startLine": 2082,
        "startChar": 30,
        "endLine": 2082,
        "endChar": 61
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "062dbd1c_317dfb2b",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2125,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2023-09-29T04:27:37Z",
      "side": 1,
      "message": "not sure if it\u0027s worth converting to v1 data. I think we only need to fix L2142 to L2157 to access the corresponding field in the new message format. Is there any more data depending on the v1 message format that I\u0027m not aware of?",
      "range": {
        "startLine": 2113,
        "startChar": 0,
        "endLine": 2125,
        "endChar": 9
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af41ec16_07860809",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2125,
      "author": {
        "id": 1398165
      },
      "writtenOn": "2023-10-02T19:18:41Z",
      "side": 1,
      "message": "It may mostly scatter between L2142 to L2157. But I\u0027m not really confident to change them. It\u0027s prone to be error. Converting to old format can avoid changing it everywhere. It\u0027s easy to compare diff in CL. Also it\u0027s less risk since the code below is untouched.",
      "parentUuid": "062dbd1c_317dfb2b",
      "range": {
        "startLine": 2113,
        "startChar": 0,
        "endLine": 2125,
        "endChar": 9
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b46c5bf0_84c9ff75",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 2
      },
      "lineNbr": 2125,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2023-10-03T18:54:09Z",
      "side": 1,
      "message": "I mean if there\u0027s something wrong with the data returned v2 service. Converting to the old format would probably hit the error in the same way. But good point for code diff.",
      "parentUuid": "af41ec16_07860809",
      "range": {
        "startLine": 2113,
        "startChar": 0,
        "endLine": 2125,
        "endChar": 9
      },
      "revId": "5bd07fe3fe4ab37966291490c714f710b4168d64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}