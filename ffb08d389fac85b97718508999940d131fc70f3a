{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aaf5210f_476e7f99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2023-08-03T21:58:41Z",
      "side": 1,
      "message": "WDYT, of the concept and the execution?",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a88331b3_1ed32264",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1001939
      },
      "writtenOn": "2023-08-04T08:57:00Z",
      "side": 1,
      "message": "use_siso is not valid args for gn yet, so if it has `use_siso\u003dtrue`, `gn gen` will fail\n\n```\n % gn gen out/siso\nWARNING at build arg file (use \"gn args \u003cout_dir\u003e\" to edit):2:12: Build argument has no effect.\nuse_siso \u003d true\n           ^---\nDid you mean \"use_gio\"?\n```\n\nthat said, we might want to introduce `use_siso` as siso would require\n`enable_precompiled_headers\u003dfalse` (which is false when use_goma/use_remoteexec\u003dtrue).\n\nor can we make `enable_precompiled_headers\u003dfalse` by default\n(i.e. user need to set `enable_precompiled_hedaers\u003dtrue` if they want) ?",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df6abbb9_f324b171",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2023-08-04T09:14:41Z",
      "side": 1,
      "message": "As written in the description, this CL shows the concept.\n\n\u003e To make this work a dummy use_siso gn arg needs to be added to one of\nthe gn files in Chromium\u0027s build directory.\n\nI agree with handling `enable_precompiled_headers` by `use_siso`.",
      "parentUuid": "a88331b3_1ed32264",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "158751bf_899b558e",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2023-08-04T16:26:47Z",
      "side": 1,
      "message": "See crrev.com/c/4753433 to implement this. We would want to land it first.",
      "parentUuid": "df6abbb9_f324b171",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a3a7adf_d7e29ed0",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2023-08-04T17:01:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "158751bf_899b558e",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dd105b4_4abd931c",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1001939
      },
      "writtenOn": "2023-08-04T08:57:00Z",
      "side": 1,
      "message": "`autosiso` is equivalent to `siso ninja` not `siso`.",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0c75bc5_8ae15bd6",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2023-08-04T09:14:41Z",
      "side": 1,
      "message": "`autosiso` itself can be removed by directly calling `siso`. \nHowever, it requires handling reproxy using `reclient_helper.build_context()` like\nhttps://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:autosiso.py;l\u003d53;drc\u003dce3e8194651709d8cb6a71d9441cad37ef918934",
      "range": {
        "startLine": 105,
        "startChar": 15,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3322c4cc_0abe281f",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2023-08-04T16:26:47Z",
      "side": 1,
      "message": "Removing autosiso would be preferable. I propose that we land this and train developers to invoke autoninja, and then integrate autosiso into autoninja, and then delete autosiso*",
      "parentUuid": "c0c75bc5_8ae15bd6",
      "range": {
        "startLine": 105,
        "startChar": 15,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32fdbb50_1063b3b0",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2023-08-04T16:26:47Z",
      "side": 1,
      "message": "I don\u0027t understand this comment. What is needed here?",
      "parentUuid": "6dd105b4_4abd931c",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "816bef83_8765c82b",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2023-08-04T17:01:30Z",
      "side": 1,
      "message": "Oh wait, I understand. Fixed.",
      "parentUuid": "32fdbb50_1063b3b0",
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "181097c7_e9526b11",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2023-08-04T22:05:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3322c4cc_0abe281f",
      "range": {
        "startLine": 105,
        "startChar": 15,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e282daab_c88b63ae",
        "filename": "autoninja.py",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1366072
      },
      "writtenOn": "2023-08-07T02:45:59Z",
      "side": 1,
      "message": "\u003e I propose that we land this and train developers to invoke autoninja, and then integrate autosiso into autoninja, and then delete autosiso*\n\nSGTM",
      "parentUuid": "181097c7_e9526b11",
      "range": {
        "startLine": 105,
        "startChar": 15,
        "endLine": 105,
        "endChar": 23
      },
      "revId": "ffb08d389fac85b97718508999940d131fc70f3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}