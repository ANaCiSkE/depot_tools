{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c18a87ea_fff4f827",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2022-03-29T18:56:09Z",
      "side": 1,
      "message": "This seems related to some changes you made Raul - any thoughts on making this work perfectly?",
      "revId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7084737d_5449b3a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1319240
      },
      "writtenOn": "2022-03-29T20:02:04Z",
      "side": 1,
      "message": "I seem to have only touched Python 3 support here. That said, this having to handle lists of strings seems dubious and I would expect other output wrappers to have failed on this before. Shouldn\u0027t only the final fully formatted output string end up here? What\u0027s passing in or creating the lists?",
      "parentUuid": "c18a87ea_fff4f827",
      "revId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fdcfa4f_bc35e826",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2022-03-29T20:30:32Z",
      "side": 1,
      "message": "The lists of strings are happening in Python 3 presubmits, but it\u0027s hard to tell which ones because the call stack was just generic printing of results. The arrays often have a half-dozen or so empty strings and then a string with an actual error message. I could grab some of those actual error messages to try to understand things better (but each run takes an hour or so :-)\nWhen I saw that the write function already handled bytes being passed I thought that maybe passing a list was also considered normal and appropriate. Note also that in the Python 2 case these lists would be handled by the str(text) expression. It may be that this bug has been latent for a long time and was then triggered by the switch to Python 3, which doesn\u0027t contain this conversion.",
      "parentUuid": "7084737d_5449b3a1",
      "revId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80d11d3a_93cd9d8b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1319240
      },
      "writtenOn": "2022-03-30T05:36:12Z",
      "side": 1,
      "message": "Looking at for example the Annotated wrapper in gclient_utils.py it doesn\u0027t seem like it\u0027d handle lists either, even on Python 2. This is probably worth merging to get things fixed, but should be followed up as an issue to investigate the root cause and if intended.",
      "parentUuid": "5fdcfa4f_bc35e826",
      "revId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "1229fbaf1a251e006d4bf0e295b2fcfccb5ff4f5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}