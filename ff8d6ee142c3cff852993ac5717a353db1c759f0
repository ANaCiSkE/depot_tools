{
  "comments": [
    {
      "key": {
        "uuid": "3365071e_ecd98f7d",
        "filename": "gerrit_util.py",
        "patchSetId": 8
      },
      "lineNbr": 845,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2017-11-07T00:32:33Z",
      "side": 1,
      "message": "nit: make it a set set(...)",
      "range": {
        "startLine": 845,
        "startChar": 9,
        "endLine": 845,
        "endChar": 74
      },
      "revId": "ff8d6ee142c3cff852993ac5717a353db1c759f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51aad31b_9541023d",
        "filename": "gerrit_util.py",
        "patchSetId": 8
      },
      "lineNbr": 845,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2017-11-07T00:49:42Z",
      "side": 1,
      "message": "I\u0027m not sure this suggestion makes sense (though I\u0027m reasoning about it using mostly C++ instincts). Constructing the set seems like it might be more expensive than the brute-force search (|safe| is just 53 bytes).\n\nIf we wanted to make this fast, a regex would probably make the most sense, but in the current usage it doesn\u0027t seem worth optimizing.\n\nFWIW the current implementation is exactly what urllib.encode() does.",
      "parentUuid": "3365071e_ecd98f7d",
      "range": {
        "startLine": 845,
        "startChar": 9,
        "endLine": 845,
        "endChar": 74
      },
      "revId": "ff8d6ee142c3cff852993ac5717a353db1c759f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}