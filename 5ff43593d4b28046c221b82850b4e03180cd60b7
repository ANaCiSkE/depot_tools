{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "018183d5_75cc5e7e",
        "filename": "git_cl.py",
        "patchSetId": 9
      },
      "lineNbr": 4550,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-08-08T04:03:59Z",
      "side": 1,
      "message": "Don\u0027t we need to preserve the order of revisions? If so, we shouldn\u0027t be using a dict (which is ordered in cpython, but not guaranteed). Instead, let\u0027s use a list of tuples",
      "revId": "5ff43593d4b28046c221b82850b4e03180cd60b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71112381_bc7a27ba",
        "filename": "git_cl.py",
        "patchSetId": 9
      },
      "lineNbr": 4550,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2024-08-08T16:25:16Z",
      "side": 1,
      "message": "Dicts have been ordered since py3.7. From https://docs.python.org/3/library/stdtypes.html#typesmapping: \"Changed in version 3.7: Dictionary order is guaranteed to be insertion order. This behavior was an implementation detail of CPython from 3.6.\"\n\nI believe depot_tools uses at least 3.8 so order should be guaranteed, but LMK if we should be explicit with OrderedDict or something",
      "parentUuid": "018183d5_75cc5e7e",
      "revId": "5ff43593d4b28046c221b82850b4e03180cd60b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "204ee17d_e52fef18",
        "filename": "git_cl.py",
        "patchSetId": 9
      },
      "lineNbr": 4550,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-08-08T16:57:23Z",
      "side": 1,
      "message": "While I don\u0027t believe there will be changes anytime soon, I don\u0027t want future-self (or anyone else) to have to deal with this if py decides to change its dict behavior. Since that is an implementation detail, and not a language guarantee (meaning it can be subject to a change), I\u0027m leaning towards using a list or OrderedDict to be on the safe side. I\u0027ll let you make the final call.",
      "parentUuid": "71112381_bc7a27ba",
      "revId": "5ff43593d4b28046c221b82850b4e03180cd60b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf62608a_7888fbcb",
        "filename": "git_cl.py",
        "patchSetId": 9
      },
      "lineNbr": 4587,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2024-08-08T04:03:59Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t catch this earlier but a user would also need to remove commit hashes that have been cherry-picked already? If so, we should help them figure out what those are, or at least let them know.",
      "fixSuggestions": [
        {
          "fixId": "8b95439b_df69039f",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "git_cl.py",
              "range": {
                "startLine": 4588,
                "startChar": 0,
                "endLine": 4589,
                "endChar": 0
              },
              "replacement": "                      \u0027which change the chain should start with. You will also \u0027\n                      \u0027need to remove the commit hashes that have already been \u0027\n                      \u0027cherry picked from the commit message.\u0027)\n"
            }
          ]
        }
      ],
      "revId": "5ff43593d4b28046c221b82850b4e03180cd60b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9014ce43_05d3a518",
        "filename": "git_cl.py",
        "patchSetId": 9
      },
      "lineNbr": 4587,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2024-08-08T16:25:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf62608a_7888fbcb",
      "revId": "5ff43593d4b28046c221b82850b4e03180cd60b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}