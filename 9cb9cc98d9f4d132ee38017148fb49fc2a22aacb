{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "beda6f6e_b513ea31",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2023-08-14T22:42:50Z",
      "side": 1,
      "message": "nit: We could put a comment here about what these folders are that we\u0027re adding to the path. I noticed in another CL its three directories up?",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa76d47d_01d10f78",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-08-15T01:00:33Z",
      "side": 1,
      "message": "Done - added explanatory comments. The later CLs add a file in `//metadata/fields/custom`, so the repo\u0027s root dir is three directories up.",
      "parentUuid": "beda6f6e_b513ea31",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a57bdb0d_2c6dbd94",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2023-08-14T22:42:50Z",
      "side": 1,
      "message": "nit: Instead of this comment about what these are, it might be helpful to add some why context. These are relatively straightforward patterns but some of the others aren\u0027t and regex is hard to read.",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4045102_6846444d",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-08-15T01:00:33Z",
      "side": 1,
      "message": "Thanks. Added explanatory comments for each, and renamed to `_PATTERN_STARTS_WITH_YES_OR_NO` to reduce confusion.",
      "parentUuid": "a57bdb0d_2c6dbd94",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "544edb85_baa5c3ce",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2023-08-14T22:42:50Z",
      "side": 1,
      "message": "Maybe add context here which specifies that this method is supposed to be overridden by a method which provides actual validation.",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f67b6d8_4bf5a61e",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-08-15T01:00:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "544edb85_baa5c3ce",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ee565cb_9b19e7f1",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2023-08-14T22:42:50Z",
      "side": 1,
      "message": "Slightly concerned that having the default `validate` method return things as valid automatically could backfire. \n\nWhat about having this base class raise a `NotImplementedError` here which would catch instances where the caller did not properly implement a validation method?",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1318d376_37d35343",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-08-15T01:00:33Z",
      "side": 1,
      "message": "Okay, agreed. I\u0027ve removed `CustomField` as that was the main difference. Not `MetadataField.validate` raises `NotImplementedError`",
      "parentUuid": "2ee565cb_9b19e7f1",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04df8510_b226b78d",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2023-08-14T22:42:50Z",
      "side": 1,
      "message": "```suggestion\n          f\"{self._name} is \u0027{value}\u0027 - should be only {util.YES} or {util.NO}.\"\n```",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "280ce379_696c9f5c",
        "filename": "metadata/fields/types.py",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-08-15T01:00:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04df8510_b226b78d",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f16cd55f_77b07c7a",
        "filename": "metadata/validation_result.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2023-08-14T22:42:50Z",
      "side": 1,
      "message": "There\u0027s a python core module which will do this for you really nicely with great edge case handling.\nhttps://docs.python.org/3/library/textwrap.html",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6d86791_4ba4c9c6",
        "filename": "metadata/validation_result.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1544922
      },
      "writtenOn": "2023-08-15T01:02:30Z",
      "side": 1,
      "message": "Thanks! Using `textwrap.fill` and refactored so it\u0027s used in `get_message` if a `width` is given.",
      "parentUuid": "f16cd55f_77b07c7a",
      "revId": "9cb9cc98d9f4d132ee38017148fb49fc2a22aacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}