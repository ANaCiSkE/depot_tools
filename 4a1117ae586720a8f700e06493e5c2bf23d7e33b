{
  "comments": [
    {
      "key": {
        "uuid": "e3d2da38_dfbef761",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2541,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-08T02:11:09Z",
      "side": 1,
      "message": "btw, are these only for solutions (ie top repos containing DEPS)?\nOr do these apply to sub-deps too?\n\nie, in chromium checkout, is --revision v8@rev supported?",
      "range": {
        "startLine": 2541,
        "startChar": 57,
        "endLine": 2541,
        "endChar": 66
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f2a15c2_f97e1b26",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2541,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-08T22:01:51Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "e3d2da38_dfbef761",
      "range": {
        "startLine": 2541,
        "startChar": 57,
        "endLine": 2541,
        "endChar": 66
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e129dee_505b7973",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2542,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-08T02:11:09Z",
      "side": 1,
      "message": "afair, \u0027rev\u0027 here can be either\n * actual revision like deadbeef\n * ref name like \"refs/heads/branch\"\n\nis that still the case?",
      "range": {
        "startLine": 2542,
        "startChar": 37,
        "endLine": 2542,
        "endChar": 40
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "558d6cee_68b64a19",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2542,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-08T22:01:51Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "1e129dee_505b7973",
      "range": {
        "startLine": 2542,
        "startChar": 37,
        "endLine": 2542,
        "endChar": 40
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fbdc109_7f6ddf02",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2560,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-08T04:18:07Z",
      "side": 1,
      "message": "The target branch against which a patch was created in format dep@branch.\nIt is used to determine which commits from the patch_ref actually constitute a patch.\nIf not given, ...",
      "range": {
        "startLine": 2560,
        "startChar": 27,
        "endLine": 2560,
        "endChar": 65
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b44ddb_1a5183fa",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2560,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-08T22:01:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fbdc109_7f6ddf02",
      "range": {
        "startLine": 2560,
        "startChar": 27,
        "endLine": 2560,
        "endChar": 65
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b464149_419aabe9",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2563,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-08T04:18:07Z",
      "side": 1,
      "message": "IMO, don\u0027t support \"otherwise\" after a transition period. If someone gives a --patch-ref, than either --patch-branch or --revision should be required required.\n\nwhat bothers me with this \"iterate all branches\" is non-determinism -- we return first branch which contains a revision, which may result in diff set of commits cherry picked.",
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af6df9ae_865378e5",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2563,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-08T22:01:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5b464149_419aabe9",
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fb5ea45_fbd5d1af",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2565,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-08T02:11:09Z",
      "side": 1,
      "message": "after more thinking, this doesn\u0027t make sense any more.\niiuc correctly --revision flag actual usage (but I might be wrong!),\nif --revision is given for a repo which matches patch\u0027s repo,\nthen patch-branch should just be ignored.\n\nLet\u0027s discuss on these scenarios. \"Then\" parts capture my understanding of what should be done.\nPlease, disagree with me :)\n\n\n\nScenario 1:\n Assume:\n   * we have a patch against repo REPO and branch BRANCH\n   * --revision flag is given to fetch REPO @ REVISION.\n Then:\n   patch_branch isn\u0027t relevant. We should apply patch on top of REVISION.\n   ie, branch_rev :\u003d REVISION\n\n\nScenario 2:\n Assume:\n   * we have a patch against repo REPO and branch BRANCH\n   * --revision flag is given to fetch REPO @ \u003cBRANCH\u003e.\n Then:\n   branch_rev :\u003d \u003cBRANCH\u003e\n\n\nScenario 3:\n Assume:\n   * we have a patch against repo REPO and branch BRANCH\n   * no --revision flag for REPO\n Then:\n   * we should fetch HEAD of patch_branch during fetch, right?\n   * branch_rev :\u003d patch_branch\n\n\nScenario 4:\n  Assume:\n   * we have a patch against repo REPO and branch BRANCH\n   * --revision flag is given to fetch REPO @ \u003cOTHER-BRANCH\u003e.\n Then:\n   branch_rev :\u003d OTHER_BRANCH\n\n\nScenario 5:\n  Assume:\n   * we have a patch against repo REPO and branch BRANCH\n   * --revision flag is given to fetch REPO @ \u003cREVISION, which doesn\u0027t exist on BRANCH\u003e.\n Then:\n   branch_rev :\u003d REVISION",
      "range": {
        "startLine": 2560,
        "startChar": 19,
        "endLine": 2565,
        "endChar": 63
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adc1ca3c_3cd46121",
        "filename": "gclient.py",
        "patchSetId": 5
      },
      "lineNbr": 2565,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-08T04:18:07Z",
      "side": 1,
      "message": "(discussed ofline), I misread what \"branch_rev\" was used for. I thought it was used as revision on top of which to cherry pick. But, actually it\u0027s used to determine which commits from patch ref should be cherry picked.",
      "parentUuid": "6fb5ea45_fbd5d1af",
      "range": {
        "startLine": 2560,
        "startChar": 19,
        "endLine": 2565,
        "endChar": 63
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d5276ce_bfd98570",
        "filename": "gclient_scm.py",
        "patchSetId": 5
      },
      "lineNbr": 362,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2018-08-08T04:18:07Z",
      "side": 1,
      "message": "and then perhaps also */*/*?\ni wonder, does for-each-ref support \u0027**\u0027 as \"recursively everything\"?",
      "range": {
        "startLine": 362,
        "startChar": 42,
        "endLine": 362,
        "endChar": 45
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d266c0c_be02172e",
        "filename": "gclient_scm.py",
        "patchSetId": 5
      },
      "lineNbr": 362,
      "author": {
        "id": 1167909
      },
      "writtenOn": "2018-08-08T22:01:51Z",
      "side": 1,
      "message": "Turns out less is more, and refs/remotes/origin does the trick.",
      "parentUuid": "9d5276ce_bfd98570",
      "range": {
        "startLine": 362,
        "startChar": 42,
        "endLine": 362,
        "endChar": 45
      },
      "revId": "4a1117ae586720a8f700e06493e5c2bf23d7e33b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}