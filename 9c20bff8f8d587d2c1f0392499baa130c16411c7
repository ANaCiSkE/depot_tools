{
  "comments": [
    {
      "key": {
        "uuid": "2be66650_b5a5a9e8",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 677,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:21:56Z",
      "side": 1,
      "message": "Note that `cipd ensure` can currently only talk to one service URL per invocation. I think this is a fine restriction to have (especially if we invoke `cipd ensure` once per DEPS file). With that in mind, it would be easy to add a global \u0027cipd_service_host \u003d \"other-host.appspot.com\"\u0027 option to DEPS.",
      "range": {
        "startLine": 677,
        "startChar": 33,
        "endLine": 677,
        "endChar": 72
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bccc761_153f8ed9",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 683,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:21:56Z",
      "side": 1,
      "message": "if we have the condition and the condition value, why not just do the evaluation here? (it\u0027s possible I misunderstand this too)",
      "range": {
        "startLine": 683,
        "startChar": 16,
        "endLine": 683,
        "endChar": 42
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9911516_716b0a0b",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1008,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2017-12-15T23:01:59Z",
      "side": 1,
      "message": "I mention this again below in gclient_scm.py, but I don\u0027t think that hoisting these methods into this class and then overriding them in CipdDependency is the best way to do this.",
      "range": {
        "startLine": 1002,
        "startChar": 2,
        "endLine": 1008,
        "endChar": 0
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "326ececd_aaf26aa6",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1008,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-12-15T23:07:59Z",
      "side": 1,
      "message": "Discussing in gclient_scm.",
      "parentUuid": "f9911516_716b0a0b",
      "range": {
        "startLine": 1002,
        "startChar": 2,
        "endLine": 1008,
        "endChar": 0
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a1aa278_7fdc7fdc",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1742,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:21:56Z",
      "side": 1,
      "message": "what happens when we want to have multiple CIPD packages at the same location? We\u0027ve seen this happen very frequently in infra applications (~90% of our uses of cipd use this feature).",
      "range": {
        "startLine": 1742,
        "startChar": 43,
        "endLine": 1742,
        "endChar": 62
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dddf99bb_f809a5a7",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1742,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-12-15T23:26:59Z",
      "side": 1,
      "message": "Can you elaborate on this? I\u0027m not sure whether you mean multiple packages in the same subdir or multiple packages in the same cipd root or something else.",
      "parentUuid": "5a1aa278_7fdc7fdc",
      "range": {
        "startLine": 1742,
        "startChar": 43,
        "endLine": 1742,
        "endChar": 62
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baedebca_e50b7beb",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1742,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:35:57Z",
      "side": 1,
      "message": "Multiple packages in the same subdir. We do this, for example, to put vpython and the git wrapper into the same directory (which we then put on $PATH). We do this in depot_tools to put led, vpython and the mac toolchain downloader in the same dir (again, to put on $PATH): https://chromium.googlesource.com/chromium/tools/depot_tools/+/master/cipd_manifest.txt\n\nStuff like that. I\u0027m not sure about having the implementation in gclient make such a policy decision... maybe that\u0027s what\u0027s best for gclient and all its users, but I\u0027m just pointing out that this would be too restrictive for many of the use cases we have for cipd elsewhere.",
      "parentUuid": "dddf99bb_f809a5a7",
      "range": {
        "startLine": 1742,
        "startChar": 43,
        "endLine": 1742,
        "endChar": 62
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06b01c1b_a001e9c9",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1772,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2017-12-15T23:01:59Z",
      "side": 1,
      "message": "At the least, comment that this is an override method.",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb9f8c65_07e3da74",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1781,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2017-12-15T23:01:59Z",
      "side": 1,
      "message": "Huh?",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "439644ce_e8ab2964",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1781,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-12-15T23:07:59Z",
      "side": 1,
      "message": "Equivalent to marking unused, for pylint\u0027s sake.",
      "parentUuid": "fb9f8c65_07e3da74",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "900a7947_18aef7bb",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1781,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:21:56Z",
      "side": 1,
      "message": "I assume it\u0027s a hack to make pylint shut up about an unused parameter?",
      "parentUuid": "fb9f8c65_07e3da74",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40ee1c39_3c550890",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1781,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2017-12-15T23:34:14Z",
      "side": 1,
      "message": "Just prefix the parameter with an underscore.",
      "parentUuid": "900a7947_18aef7bb",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbc67ecf_e60b4a6e",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1792,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:21:56Z",
      "side": 1,
      "message": "honestly... not a huge fan of this, especially since it\u0027s asymmetric with git dependencies. What about something like `\"url\": \"cipd://path/to/package@version\"`? Maybe allow it to be a list to allow multiple packages?",
      "range": {
        "startLine": 1792,
        "startChar": 7,
        "endLine": 1792,
        "endChar": 33
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c28a205_c42e8411",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1792,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-12-15T23:26:59Z",
      "side": 1,
      "message": "If we\u0027re going to have a URL in there, I\u0027d strongly prefer it be something that actually resolves.",
      "parentUuid": "fbc67ecf_e60b4a6e",
      "range": {
        "startLine": 1792,
        "startChar": 7,
        "endLine": 1792,
        "endChar": 33
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e77fbbd2_e0df4755",
        "filename": "gclient.py",
        "patchSetId": 2
      },
      "lineNbr": 1792,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:35:57Z",
      "side": 1,
      "message": "That\u0027s probably difficult to do without adding a lot more to cipd\u0027s frontend. Regardless, I\u0027m still not a huge fan of doing this asymmetric pseudo-explicit tagging :)\n\nFWIW, I don\u0027t think non-resolvable URIs are the worst thing...",
      "parentUuid": "9c28a205_c42e8411",
      "range": {
        "startLine": 1792,
        "startChar": 7,
        "endLine": 1792,
        "endChar": 33
      },
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eca43c51_5438eab5",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2017-12-15T23:01:59Z",
      "side": 1,
      "message": "I would prefer that you integrate the creation of CipdWrapper objects into this method, rather than having half of the Wrapper-creation logic in an override method in gclient.py, and half here.\n\nEither that, or remove this method entirely and break gclient\u0027s Dependency class into a GitDependency and a CipdDependency, but then that brings into question the division of labor between Dependency objects and Wrapper objects.",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4059f145_c09a33ff",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-12-15T23:07:59Z",
      "side": 1,
      "message": "\u003e I would prefer that you integrate the creation of CipdWrapper objects into this method, rather than having half of the Wrapper-creation logic in an override method in gclient.py, and half here.\n\nOne of my early implementations did this, but it required GetScmName know how to determine that a URL was a CIPD one, either by messing with the protocol or by explicitly checking the host name. Both of those seemed bad.\n\n\u003e \n\u003e Either that, or remove this method entirely and break gclient\u0027s Dependency class into a GitDependency and a CipdDependency, but then that brings into question the division of labor between Dependency objects and Wrapper objects.\n\nI\u0027ll look into this, though.",
      "parentUuid": "eca43c51_5438eab5",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06609b94_adcdd30f",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1002100
      },
      "writtenOn": "2017-12-15T23:34:14Z",
      "side": 1,
      "message": "GetScmName already parses the url for ending in .git or using one of the various git protocols. It should do the same for CIPD, especially if cipd uses \"cipd://package/path\" urls.",
      "parentUuid": "4059f145_c09a33ff",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdab5da4_6bb72e39",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2017-12-15T23:37:43Z",
      "side": 1,
      "message": "cipd doesn\u0027t have a standard URI scheme, unfortunately (though maybe we should make it have one... that would definitely expand the scope of this CL a lot though, and I\u0027m not sure if it\u0027s worth it).",
      "parentUuid": "06609b94_adcdd30f",
      "revId": "9c20bff8f8d587d2c1f0392499baa130c16411c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}