{
  "comments": [
    {
      "key": {
        "uuid": "dbc5b601_6dba60aa",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 5406,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2017-10-12T00:36:34Z",
      "side": 0,
      "message": "I think this is helpful message for most devs.\nFrom my usage, it\u0027s rare that I need to apply patch in detached head, and when I do need it, I do usually just copy-paste stuff from Gerrit\u0027s \"download\" options. So, I guess I\u0027d prefer another option instead:\n --apply-outside-of-branch",
      "range": {
        "startLine": 5406,
        "startChar": 4,
        "endLine": 5406,
        "endChar": 77
      },
      "revId": "7d05ba9caa2afe78d015c1cbfafafc8c1429d9bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fe24386_efe9f308",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 5406,
      "author": {
        "id": 1001706
      },
      "writtenOn": "2017-10-12T01:07:31Z",
      "side": 0,
      "message": "I disagree that this is helpful for most devs.  I almost always run afoul of this.  I think it\u0027s different when working on chromium, because checkouts are very heavy weight.\n\nWhen I use \u0027git cl patch\u0027, it\u0027s *never* because I want to resume work on a patch from a different checkout.  Doing that is too painful, because the resulting compilation will almost always be very big.\n\nThe most common use case is that another developer asks me to try out their patch.  Typically, my checkout will be on a branch tracking origin/master, with a chromium build that is up-to-date with my branch.  When someone asks me to look at their unrelated patch, this is what I want to do:\n\n$ git checkout origin/master\n$ git cl patch \u003cissue\u003e\n$ ninja ...\n\nThis works well because I don\u0027t have to run \u0027gclient sync\u0027, and it means that there will be very little work to do an incremental build -- basically, it reverts whatever I\u0027m working on, and applies the other patch.  I don\u0027t want to apply the patch on top of my working branch,  because I don\u0027t want to mix up my changes with the patch.\n\nI don\u0027t really see what problem --apply-outside-of-branch solves.  It\u0027s a very wordy and difficult-to-remember option, and I will *always* omit it on the first try.  I don\u0027t think it\u0027s at all weird or misleading to allow applying a patch in detached HEAD; the idiomatic behavior for git commands generally is to allow detached HEAD, and I don\u0027t see why this should be any different.",
      "parentUuid": "dbc5b601_6dba60aa",
      "range": {
        "startLine": 5406,
        "startChar": 4,
        "endLine": 5406,
        "endChar": 77
      },
      "revId": "7d05ba9caa2afe78d015c1cbfafafc8c1429d9bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d41c310b_4a5b475b",
        "filename": "git_cl.py",
        "patchSetId": 1
      },
      "lineNbr": 5406,
      "author": {
        "id": 1141499
      },
      "writtenOn": "2017-10-12T01:21:31Z",
      "side": 0,
      "message": "I didn\u0027t think of incremental compile. That\u0027s a very good point.\nAlso, I didn\u0027t mean that my flag be added to this CL verbatim, i made it verbose to illustrate intent.\n\nAs for what problem it solves: I observed myself/of heard from newcomers to Chrome (but really, Git) that detached HEAD is really confusing. Thus, I thought, suggesting \u0027-b\u0027 is doing the right thing for them.\n\nHowever, you\u0027ve convinced me that overall this CL will gain CHromium devs productivity, even though it may cause extra stumbling for git newcomers. Thank you very much for detailed and patient explanation. I keep forgetting about ninja/compile caches.\n\nMind waiting for agable@ to chime in?",
      "parentUuid": "6fe24386_efe9f308",
      "range": {
        "startLine": 5406,
        "startChar": 4,
        "endLine": 5406,
        "endChar": 77
      },
      "revId": "7d05ba9caa2afe78d015c1cbfafafc8c1429d9bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}