{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c088e40_2b551451",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2024-02-23T00:29:37Z",
      "side": 1,
      "message": "FYI `git cl presubmit` runs presubmit_support.py which actually handles running presubmit checks. It has a --json_output flag that you could use directly if you don\u0027t need the extra functionality git cl provides: https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:presubmit_support.py;l\u003d2273;drc\u003d62dc9f462e4465acf1bef9b95c285a179f75ce47\n\ngit cl presubmit uses that flag to output to a temp file:https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:git_cl.py;l\u003d1741;drc\u003db1b1a43f071dc4888070cae0c983c9bd333c5db6",
      "revId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08a05f0d_e0d761db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1394418
      },
      "writtenOn": "2024-02-23T00:31:22Z",
      "side": 1,
      "message": "Yep, I saw that, but thought that it wasn\u0027t an \"official\" way of running presubmit hooks from the command line. Thanks - will abandon this CL too :P",
      "parentUuid": "9c088e40_2b551451",
      "revId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db0967c8_0e182a31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1394418
      },
      "writtenOn": "2024-02-23T00:35:32Z",
      "side": 1,
      "message": "Ah, `git cl upload` does have some nicities like getting the Gerrit project / branch / URL, author and CL description to pass it into presubmit_support.py\n\nDo you think it is worth the maintenance cost of including this flag in `git cl upload`?",
      "parentUuid": "08a05f0d_e0d761db",
      "revId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c49d08f_571b835f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2024-02-23T00:45:57Z",
      "side": 1,
      "message": "Yeah, you\u0027ll at least need to specify Gerrit info to get owners presubmit checks to pass. I think it\u0027s worth it to have this flag if you\u0027ll use the json output in something like `run_and_check_presubmit.sh`.",
      "parentUuid": "db0967c8_0e182a31",
      "revId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd313426_ea5dedad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1394418
      },
      "writtenOn": "2024-02-23T00:47:30Z",
      "side": 1,
      "message": "Thanks! Will un-abandon this CL.",
      "parentUuid": "7c49d08f_571b835f",
      "revId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f652e21_bb692c61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1394418
      },
      "writtenOn": "2024-02-23T00:47:52Z",
      "side": 1,
      "message": "(Resolving thread.)",
      "parentUuid": "dd313426_ea5dedad",
      "revId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b700d0ab_2bd4f68b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1147264
      },
      "writtenOn": "2024-03-05T19:31:03Z",
      "side": 1,
      "message": "sorry for sitting on this CL for a while; lgtm",
      "revId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bbba2e47c37f987067ef34b7ae56bba4c86c278c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}