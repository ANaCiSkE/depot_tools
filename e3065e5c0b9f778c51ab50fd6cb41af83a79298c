{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "564c6e24_685c5c93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2021-01-29T15:03:50Z",
      "side": 1,
      "message": "hawaii time zone!",
      "revId": "e3065e5c0b9f778c51ab50fd6cb41af83a79298c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79e95859_6baa432d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-29T18:02:31Z",
      "side": 1,
      "message": "I want to do some testing to make sure I understand this so I\u0027ll reply later today",
      "revId": "e3065e5c0b9f778c51ab50fd6cb41af83a79298c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "579e98f9_4e8c1bf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-01-30T02:29:23Z",
      "side": 1,
      "message": "One disadvantage of this is that increases the lengths of paths, which are always a concern due to Windows path limits. However this only increases them by eight characters, and a change from last August (crrev.com/c/2376030) means that our next toolchain will have paths thirty characters shorter so this should be fine. crrev.com/c/2372727 also bought some breathing room.\n\nI did end-to-end testing of generating a package with this, uploading it, running gclient runhooks, and then doing a build. All was fine until the last step:\n\nTraceback (most recent call last):\n  File \"c:/src/chromium3/src/build/toolchain/win/setup_toolchain.py\", line 304, in \u003cmodule\u003e\n    main()\n  File \"c:/src/chromium3/src/build/toolchain/win/setup_toolchain.py\", line 250, in main\n    env \u003d _LoadToolchainEnv(cpu, win_sdk_path, target_store)\n  File \"c:/src/chromium3/src/build/toolchain/win/setup_toolchain.py\", line 104, in _LoadToolchainEnv\n    env \u003d json.load(open(env))[\u0027env\u0027]\nIOError: [Errno 2] No such file or directory: \u0027C:\\\\src\\\\chromium3\\\\src\\\\third_party\\\\depot_tools\\\\win_toolchain\\\\vs_files\\\\2b33dbcb95\\\\win_sdk\\\\bin\\\\SetEnv.x64.json\u0027\n\nI guess windows_sdk_path needs updating.\n\nThis may be one of those cases where we have to support both for a while because of this lack of a connection between depot_tools and Chromium. That is, new versions of depot_tools need to build old and new versions of Chromium. I didn\u0027t dig in super deep.\n\nThis is the change to test with my modified toolchain:\n\ndiff --git a/build/vs_toolchain.py b/build/vs_toolchain.py\nindex bd6c657265f4..36a8bbb42932 100755\n--- a/build/vs_toolchain.py\n+++ b/build/vs_toolchain.py\n@@ -443,7 +443,7 @@ def _GetDesiredVsToolchainHashes():\n   # d3dcompiler_47.dll, with ARM64 libraries and UWP support.\n   # See go/chromium-msvc-toolchain for instructions about how to update the\n   # toolchain.\n-  toolchain_hash \u003d \u0027a687d8e2e4114d9015eb550e1b156af21381faac\u0027\n+  toolchain_hash \u003d \u00272b33dbcb95\u0027\n   # Third parties that do not have access to the canonical toolchain can map\n   # canonical toolchain version to their own toolchain versions.\n   toolchain_hash_mapping_key \u003d \u0027GYP_MSVS_HASH_%s\u0027 % toolchain_hash\n",
      "revId": "e3065e5c0b9f778c51ab50fd6cb41af83a79298c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7916c8e_2cb92aea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2021-02-01T18:37:32Z",
      "side": 1,
      "message": "Good point with the path length!\n\nI think it should be fine: You just made the hash length 30 bytes shorter, and this makes the win_sdk path 8 chars longer.\n\nThis is the longest path:\n\n$ find third_party/depot_tools/win_toolchain/vs_files/a687d8e2e4114d9015eb550e1b156af21381faac/Windows\\ Kits/ -type f | awk \u0027{print length($0), $0}\u0027 | sort -rn | head\n\n207 third_party/depot_tools/win_toolchain/vs_files/a687d8e2e4114d9015eb550e1b156af21381faac/Windows Kits/10/Include/10.0.19041.0/cppwinrt/winrt/impl/Windows.ApplicationModel.Appointments.AppointmentsProvider.2.h\n\nAssuming this is at c:/src/chrome/src/, that\u0027s 225 chars even with the long hash, still fairly safe.",
      "parentUuid": "579e98f9_4e8c1bf8",
      "revId": "e3065e5c0b9f778c51ab50fd6cb41af83a79298c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6db84c6_5eebc09e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2021-02-01T18:37:32Z",
      "side": 1,
      "message": "Thanks for the careful testing!\n\nHave we rolled the toolchain since https://chromium-review.googlesource.com/c/chromium/tools/depot_tools/+/2372727 ? When I look at the generated json file, it does look wrong to me, but it looks wrong to me due to the changes in that CL. The pushd stuff in there can\u0027t work with the generated json files, right?\n\nDoes this CL here work if we you locally revert https://chromium-review.googlesource.com/c/chromium/tools/depot_tools/+/2372727 ?",
      "revId": "e3065e5c0b9f778c51ab50fd6cb41af83a79298c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "685e9572_97df10fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2021-02-01T19:49:38Z",
      "side": 1,
      "message": "To rephrase this a bit: I had locally tested this CL on top of the old pinned toolchain, and I had to insert a bunch of \u0027..\u0027s in SetEnv.x64.json. I didn\u0027t see the two \u0027..\u0027, \u0027..\u0027 in package_from_installed.py when I opened it, so I figured that gets inserted later by some path relativization and that that should Just Work with the new path then -- but now I realize that the \u0027..\u0027, \u0027..\u0027 are missing due to https://chromium-review.googlesource.com/c/chromium/tools/depot_tools/+/2372727\n\nSo I think I need to read https://chromium-review.googlesource.com/c/chromium/src/+/2370604 and I\u0027ll probably need to tweak this CL a bit to accommodate the committed-but-not-deployed changes.",
      "revId": "e3065e5c0b9f778c51ab50fd6cb41af83a79298c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff01f999_fde8fd3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2021-02-01T19:52:54Z",
      "side": 1,
      "message": "That makes sense.\n\nThe change that removes the .. characters can\u0027t easily be reverted because it is basically 100% merge conflicts. I\u0027m going to do a packaging test with it just to triple-check that it works and I\u0027ll share the hash so that you can do easier before/after comparisons.",
      "parentUuid": "685e9572_97df10fd",
      "revId": "e3065e5c0b9f778c51ab50fd6cb41af83a79298c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}